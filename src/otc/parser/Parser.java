/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.parser;

import otc.lexer.*;
import otc.node.*;
import otc.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAprogram1Program */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce AAprogram2Program */
		    {
			ArrayList list = new1();
			push(goTo(0), list);
		    }
		    break;
                    case 2: /* reduce AAprogram3Program */
		    {
			ArrayList list = new2();
			push(goTo(0), list);
		    }
		    break;
                    case 3: /* reduce AAprogram4Program */
		    {
			ArrayList list = new3();
			push(goTo(0), list);
		    }
		    break;
                    case 4: /* reduce AAheader1Header */
		    {
			ArrayList list = new4();
			push(goTo(1), list);
		    }
		    break;
                    case 5: /* reduce AAheader2Header */
		    {
			ArrayList list = new5();
			push(goTo(1), list);
		    }
		    break;
                    case 6: /* reduce AHeadParameters */
		    {
			ArrayList list = new6();
			push(goTo(2), list);
		    }
		    break;
                    case 7: /* reduce ATailParameters */
		    {
			ArrayList list = new7();
			push(goTo(2), list);
		    }
		    break;
                    case 8: /* reduce AUselistDependencies */
		    {
			ArrayList list = new8();
			push(goTo(3), list);
		    }
		    break;
                    case 9: /* reduce AHeadDependenciesList */
		    {
			ArrayList list = new9();
			push(goTo(4), list);
		    }
		    break;
                    case 10: /* reduce ATailDependenciesList */
		    {
			ArrayList list = new10();
			push(goTo(4), list);
		    }
		    break;
                    case 11: /* reduce AGroupDefinitions */
		    {
			ArrayList list = new11();
			push(goTo(5), list);
		    }
		    break;
                    case 12: /* reduce AApopulationfilterfilterdefinitions1FilterDefinitions */
		    {
			ArrayList list = new12();
			push(goTo(6), list);
		    }
		    break;
                    case 13: /* reduce AApopulationfilterfilterdefinitions2FilterDefinitions */
		    {
			ArrayList list = new13();
			push(goTo(6), list);
		    }
		    break;
                    case 14: /* reduce AAperiodfilterfilterdefinitions1FilterDefinitions */
		    {
			ArrayList list = new14();
			push(goTo(6), list);
		    }
		    break;
                    case 15: /* reduce AAperiodfilterfilterdefinitions2FilterDefinitions */
		    {
			ArrayList list = new15();
			push(goTo(6), list);
		    }
		    break;
                    case 16: /* reduce AAeventfilterfilterdefinitions1FilterDefinitions */
		    {
			ArrayList list = new16();
			push(goTo(6), list);
		    }
		    break;
                    case 17: /* reduce AAeventfilterfilterdefinitions2FilterDefinitions */
		    {
			ArrayList list = new17();
			push(goTo(6), list);
		    }
		    break;
                    case 18: /* reduce AAdoctorfilterfilterdefinitions1FilterDefinitions */
		    {
			ArrayList list = new18();
			push(goTo(6), list);
		    }
		    break;
                    case 19: /* reduce AAdoctorfilterfilterdefinitions2FilterDefinitions */
		    {
			ArrayList list = new19();
			push(goTo(6), list);
		    }
		    break;
                    case 20: /* reduce AFilterList */
		    {
			ArrayList list = new20();
			push(goTo(7), list);
		    }
		    break;
                    case 21: /* reduce AAcomputationlist1ComputationList */
		    {
			ArrayList list = new21();
			push(goTo(8), list);
		    }
		    break;
                    case 22: /* reduce AAcomputationlist2ComputationList */
		    {
			ArrayList list = new22();
			push(goTo(8), list);
		    }
		    break;
                    case 23: /* reduce AForeachComputation */
		    {
			ArrayList list = new23();
			push(goTo(9), list);
		    }
		    break;
                    case 24: /* reduce AForeachSetComputation */
		    {
			ArrayList list = new24();
			push(goTo(9), list);
		    }
		    break;
                    case 25: /* reduce AForeachTableComputation */
		    {
			ArrayList list = new25();
			push(goTo(9), list);
		    }
		    break;
                    case 26: /* reduce AForeachTableSetComputation */
		    {
			ArrayList list = new26();
			push(goTo(9), list);
		    }
		    break;
                    case 27: /* reduce AForeachSequenceComputation */
		    {
			ArrayList list = new27();
			push(goTo(9), list);
		    }
		    break;
                    case 28: /* reduce AForeachSequenceSetComputation */
		    {
			ArrayList list = new28();
			push(goTo(9), list);
		    }
		    break;
                    case 29: /* reduce APrintComputation */
		    {
			ArrayList list = new29();
			push(goTo(9), list);
		    }
		    break;
                    case 30: /* reduce APrintAttrComputation */
		    {
			ArrayList list = new30();
			push(goTo(9), list);
		    }
		    break;
                    case 31: /* reduce APrintTimelineComputation */
		    {
			ArrayList list = new31();
			push(goTo(9), list);
		    }
		    break;
                    case 32: /* reduce APrintLengthComputation */
		    {
			ArrayList list = new32();
			push(goTo(9), list);
		    }
		    break;
                    case 33: /* reduce APrintTableitemComputation */
		    {
			ArrayList list = new33();
			push(goTo(9), list);
		    }
		    break;
                    case 34: /* reduce ATableComputation */
		    {
			ArrayList list = new34();
			push(goTo(9), list);
		    }
		    break;
                    case 35: /* reduce ABarchartComputation */
		    {
			ArrayList list = new35();
			push(goTo(9), list);
		    }
		    break;
                    case 36: /* reduce AListComputation */
		    {
			ArrayList list = new36();
			push(goTo(9), list);
		    }
		    break;
                    case 37: /* reduce ASingletonAttrList */
		    {
			ArrayList list = new37();
			push(goTo(10), list);
		    }
		    break;
                    case 38: /* reduce AListAttrList */
		    {
			ArrayList list = new38();
			push(goTo(10), list);
		    }
		    break;
                    case 39: /* reduce AAsequence1Sequence */
		    {
			ArrayList list = new39();
			push(goTo(11), list);
		    }
		    break;
                    case 40: /* reduce AAsequence2Sequence */
		    {
			ArrayList list = new40();
			push(goTo(11), list);
		    }
		    break;
                    case 41: /* reduce ANotSequenceItem */
		    {
			ArrayList list = new41();
			push(goTo(12), list);
		    }
		    break;
                    case 42: /* reduce ADisjunctionSequenceItem */
		    {
			ArrayList list = new42();
			push(goTo(12), list);
		    }
		    break;
                    case 43: /* reduce APermutationSequenceItem */
		    {
			ArrayList list = new43();
			push(goTo(12), list);
		    }
		    break;
                    case 44: /* reduce ASingletonDisjunctionList */
		    {
			ArrayList list = new44();
			push(goTo(13), list);
		    }
		    break;
                    case 45: /* reduce AListDisjunctionList */
		    {
			ArrayList list = new45();
			push(goTo(13), list);
		    }
		    break;
                    case 46: /* reduce ASingletonPermutationList */
		    {
			ArrayList list = new46();
			push(goTo(14), list);
		    }
		    break;
                    case 47: /* reduce AListPermutationList */
		    {
			ArrayList list = new47();
			push(goTo(14), list);
		    }
		    break;
                    case 48: /* reduce ANoparamEventItem */
		    {
			ArrayList list = new48();
			push(goTo(15), list);
		    }
		    break;
                    case 49: /* reduce AParamEventItem */
		    {
			ArrayList list = new49();
			push(goTo(15), list);
		    }
		    break;
                    case 50: /* reduce ASingletonEventParamList */
		    {
			ArrayList list = new50();
			push(goTo(16), list);
		    }
		    break;
                    case 51: /* reduce AListEventParamList */
		    {
			ArrayList list = new51();
			push(goTo(16), list);
		    }
		    break;
                    case 52: /* reduce AIdType */
		    {
			ArrayList list = new52();
			push(goTo(17), list);
		    }
		    break;
                    case 53: /* reduce ASexType */
		    {
			ArrayList list = new53();
			push(goTo(17), list);
		    }
		    break;
                    case 54: /* reduce ABirthyearType */
		    {
			ArrayList list = new54();
			push(goTo(17), list);
		    }
		    break;
                    case 55: /* reduce ADiagnosisType */
		    {
			ArrayList list = new55();
			push(goTo(17), list);
		    }
		    break;
                    case 56: /* reduce APostalcodeType */
		    {
			ArrayList list = new56();
			push(goTo(17), list);
		    }
		    break;
                    case 57: /* reduce AYearsType */
		    {
			ArrayList list = new57();
			push(goTo(17), list);
		    }
		    break;
                    case 58: /* reduce AMonthsType */
		    {
			ArrayList list = new58();
			push(goTo(17), list);
		    }
		    break;
                    case 59: /* reduce ADaysType */
		    {
			ArrayList list = new59();
			push(goTo(17), list);
		    }
		    break;
                    case 60: /* reduce ADateType */
		    {
			ArrayList list = new60();
			push(goTo(17), list);
		    }
		    break;
                    case 61: /* reduce AEventType */
		    {
			ArrayList list = new61();
			push(goTo(17), list);
		    }
		    break;
                    case 62: /* reduce ATimeType */
		    {
			ArrayList list = new62();
			push(goTo(17), list);
		    }
		    break;
                    case 63: /* reduce AAnumberlistitemtypedlist1TypedList */
		    {
			ArrayList list = new63();
			push(goTo(18), list);
		    }
		    break;
                    case 64: /* reduce AAnumberlistitemtypedlist2TypedList */
		    {
			ArrayList list = new64();
			push(goTo(18), list);
		    }
		    break;
                    case 65: /* reduce AAmalelistitemtypedlist1TypedList */
		    {
			ArrayList list = new65();
			push(goTo(18), list);
		    }
		    break;
                    case 66: /* reduce AAmalelistitemtypedlist2TypedList */
		    {
			ArrayList list = new66();
			push(goTo(18), list);
		    }
		    break;
                    case 67: /* reduce AAfemalelistitemtypedlist1TypedList */
		    {
			ArrayList list = new67();
			push(goTo(18), list);
		    }
		    break;
                    case 68: /* reduce AAfemalelistitemtypedlist2TypedList */
		    {
			ArrayList list = new68();
			push(goTo(18), list);
		    }
		    break;
                    case 69: /* reduce APostalcodeListItemTypedList */
		    {
			ArrayList list = new69();
			push(goTo(18), list);
		    }
		    break;
                    case 70: /* reduce AAyearlistitemtypedlist1TypedList */
		    {
			ArrayList list = new70();
			push(goTo(18), list);
		    }
		    break;
                    case 71: /* reduce AAyearlistitemtypedlist2TypedList */
		    {
			ArrayList list = new71();
			push(goTo(18), list);
		    }
		    break;
                    case 72: /* reduce AAmonthslistitemtypedlist1TypedList */
		    {
			ArrayList list = new72();
			push(goTo(18), list);
		    }
		    break;
                    case 73: /* reduce AAmonthslistitemtypedlist2TypedList */
		    {
			ArrayList list = new73();
			push(goTo(18), list);
		    }
		    break;
                    case 74: /* reduce AAdayslistitemtypedlist1TypedList */
		    {
			ArrayList list = new74();
			push(goTo(18), list);
		    }
		    break;
                    case 75: /* reduce AAdayslistitemtypedlist2TypedList */
		    {
			ArrayList list = new75();
			push(goTo(18), list);
		    }
		    break;
                    case 76: /* reduce AAdatelistitemtypedlist1TypedList */
		    {
			ArrayList list = new76();
			push(goTo(18), list);
		    }
		    break;
                    case 77: /* reduce AAdatelistitemtypedlist2TypedList */
		    {
			ArrayList list = new77();
			push(goTo(18), list);
		    }
		    break;
                    case 78: /* reduce AAstringlistitemtypedlist1TypedList */
		    {
			ArrayList list = new78();
			push(goTo(18), list);
		    }
		    break;
                    case 79: /* reduce AAstringlistitemtypedlist2TypedList */
		    {
			ArrayList list = new79();
			push(goTo(18), list);
		    }
		    break;
                    case 80: /* reduce AAtimelistitemtypedlist1TypedList */
		    {
			ArrayList list = new80();
			push(goTo(18), list);
		    }
		    break;
                    case 81: /* reduce AAtimelistitemtypedlist2TypedList */
		    {
			ArrayList list = new81();
			push(goTo(18), list);
		    }
		    break;
                    case 82: /* reduce AAexpandablelistitemtypedlist1TypedList */
		    {
			ArrayList list = new82();
			push(goTo(18), list);
		    }
		    break;
                    case 83: /* reduce AAexpandablelistitemtypedlist2TypedList */
		    {
			ArrayList list = new83();
			push(goTo(18), list);
		    }
		    break;
                    case 84: /* reduce ATypedListTail */
		    {
			ArrayList list = new84();
			push(goTo(19), list);
		    }
		    break;
                    case 85: /* reduce ATypedName */
		    {
			ArrayList list = new85();
			push(goTo(20), list);
		    }
		    break;
                    case 86: /* reduce APatientActor */
		    {
			ArrayList list = new86();
			push(goTo(21), list);
		    }
		    break;
                    case 87: /* reduce ADoctorActor */
		    {
			ArrayList list = new87();
			push(goTo(21), list);
		    }
		    break;
                    case 88: /* reduce ADiagnosisActor */
		    {
			ArrayList list = new88();
			push(goTo(21), list);
		    }
		    break;
                    case 89: /* reduce ATerminal$GroupDefinitions */
		    {
			ArrayList list = new89();
			push(goTo(22), list);
		    }
		    break;
                    case 90: /* reduce ANonTerminal$GroupDefinitions */
		    {
			ArrayList list = new90();
			push(goTo(22), list);
		    }
		    break;
                    case 91: /* reduce ATerminal$FilterDefinitions */
		    {
			ArrayList list = new91();
			push(goTo(23), list);
		    }
		    break;
                    case 92: /* reduce ANonTerminal$FilterDefinitions */
		    {
			ArrayList list = new92();
			push(goTo(23), list);
		    }
		    break;
                    case 93: /* reduce ATerminal$Dependencies */
		    {
			ArrayList list = new93();
			push(goTo(24), list);
		    }
		    break;
                    case 94: /* reduce ANonTerminal$Dependencies */
		    {
			ArrayList list = new94();
			push(goTo(24), list);
		    }
		    break;
                    case 95: /* reduce ATerminal$FilterList */
		    {
			ArrayList list = new95();
			push(goTo(25), list);
		    }
		    break;
                    case 96: /* reduce ANonTerminal$FilterList */
		    {
			ArrayList list = new96();
			push(goTo(25), list);
		    }
		    break;
                    case 97: /* reduce ATerminal$Computation */
		    {
			ArrayList list = new97();
			push(goTo(26), list);
		    }
		    break;
                    case 98: /* reduce ANonTerminal$Computation */
		    {
			ArrayList list = new98();
			push(goTo(26), list);
		    }
		    break;
                    case 99: /* reduce ATerminal$SequenceItem */
		    {
			ArrayList list = new99();
			push(goTo(27), list);
		    }
		    break;
                    case 100: /* reduce ANonTerminal$SequenceItem */
		    {
			ArrayList list = new100();
			push(goTo(27), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PProgram node1 = (PProgram) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAprogram1Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        PHeader pheaderNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        PComputationList pcomputationlistNode5;
        pheaderNode2 = (PHeader)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        }
        pcomputationlistNode5 = (PComputationList)nodeArrayList2.get(0);

        pprogramNode1 = new AProgram(pheaderNode2, listNode3, listNode4, pcomputationlistNode5);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAprogram2Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        PHeader pheaderNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        PComputationList pcomputationlistNode6;
        pheaderNode2 = (PHeader)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        pcomputationlistNode6 = (PComputationList)nodeArrayList3.get(0);

        pprogramNode1 = new AProgram(pheaderNode2, listNode4, listNode5, pcomputationlistNode6);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAprogram3Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        PHeader pheaderNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        PComputationList pcomputationlistNode6;
        pheaderNode2 = (PHeader)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        pcomputationlistNode6 = (PComputationList)nodeArrayList3.get(0);

        pprogramNode1 = new AProgram(pheaderNode2, listNode3, listNode5, pcomputationlistNode6);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAprogram4Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        PHeader pheaderNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        PComputationList pcomputationlistNode7;
        pheaderNode2 = (PHeader)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pcomputationlistNode7 = (PComputationList)nodeArrayList4.get(0);

        pprogramNode1 = new AProgram(pheaderNode2, listNode4, listNode6, pcomputationlistNode7);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AAheader1Header */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PHeader pheaderNode1;
        {
            // Block
        TTScriptName ttscriptnameNode2;
        LinkedList listNode4 = new LinkedList();
        TTDocComment ttdoccommentNode5;
        LinkedList listNode6 = new LinkedList();
        ttscriptnameNode2 = (TTScriptName)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        ttdoccommentNode5 = (TTDocComment)nodeArrayList6.get(0);
        {
            // Block
        }

        pheaderNode1 = new AHeader(ttscriptnameNode2, listNode4, ttdoccommentNode5, listNode6);
        }
	nodeList.add(pheaderNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AAheader2Header */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PHeader pheaderNode1;
        {
            // Block
        TTScriptName ttscriptnameNode2;
        LinkedList listNode4 = new LinkedList();
        TTDocComment ttdoccommentNode5;
        LinkedList listNode7 = new LinkedList();
        ttscriptnameNode2 = (TTScriptName)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        ttdoccommentNode5 = (TTDocComment)nodeArrayList6.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList7.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pheaderNode1 = new AHeader(ttscriptnameNode2, listNode4, ttdoccommentNode5, listNode7);
        }
	nodeList.add(pheaderNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AHeadParameters */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTypedName ptypednameNode1;
        ptypednameNode1 = (PTypedName)nodeArrayList1.get(0);
	if(ptypednameNode1 != null)
	{
	  listNode2.add(ptypednameNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce ATailParameters */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PTypedName ptypednameNode1;
        LinkedList listNode2 = new LinkedList();
        ptypednameNode1 = (PTypedName)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(ptypednameNode1 != null)
	{
	  listNode3.add(ptypednameNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AUselistDependencies */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDependencies pdependenciesNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pdependenciesNode1 = new ADependencies(listNode3);
        }
	nodeList.add(pdependenciesNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AHeadDependenciesList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TTGroupFile ttgroupfileNode1;
        ttgroupfileNode1 = (TTGroupFile)nodeArrayList1.get(0);
	if(ttgroupfileNode1 != null)
	{
	  listNode2.add(ttgroupfileNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce ATailDependenciesList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TTGroupFile ttgroupfileNode1;
        LinkedList listNode2 = new LinkedList();
        ttgroupfileNode1 = (TTGroupFile)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(ttgroupfileNode1 != null)
	{
	  listNode3.add(ttgroupfileNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AGroupDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGroupDefinitions pgroupdefinitionsNode1;
        {
            // Block
        PTypedName ptypednameNode2;
        PTypedList ptypedlistNode3;
        ptypednameNode2 = (PTypedName)nodeArrayList2.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList5.get(0);

        pgroupdefinitionsNode1 = new AGroupDefinitions(ptypednameNode2, ptypedlistNode3);
        }
	nodeList.add(pgroupdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AApopulationfilterfilterdefinitions1FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pfilterdefinitionsNode1 = new APopulationFilterFilterDefinitions(listNode2);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AApopulationfilterfilterdefinitions2FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfilterdefinitionsNode1 = new APopulationFilterFilterDefinitions(listNode3);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AAperiodfilterfilterdefinitions1FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pfilterdefinitionsNode1 = new APeriodFilterFilterDefinitions(listNode2);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AAperiodfilterfilterdefinitions2FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfilterdefinitionsNode1 = new APeriodFilterFilterDefinitions(listNode3);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AAeventfilterfilterdefinitions1FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pfilterdefinitionsNode1 = new AEventFilterFilterDefinitions(listNode2);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AAeventfilterfilterdefinitions2FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfilterdefinitionsNode1 = new AEventFilterFilterDefinitions(listNode3);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AAdoctorfilterfilterdefinitions1FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pfilterdefinitionsNode1 = new ADoctorFilterFilterDefinitions(listNode2);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAdoctorfilterfilterdefinitions2FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfilterdefinitionsNode1 = new ADoctorFilterFilterDefinitions(listNode3);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AFilterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterList pfilterlistNode1;
        {
            // Block
        PType ptypeNode2;
        PTypedList ptypedlistNode3;
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList3.get(0);

        pfilterlistNode1 = new AFilterList(ptypeNode2, ptypedlistNode3);
        }
	nodeList.add(pfilterlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AAcomputationlist1ComputationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputationList pcomputationlistNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pcomputationlistNode1 = new AComputationList(listNode2);
        }
	nodeList.add(pcomputationlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AAcomputationlist2ComputationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputationList pcomputationlistNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pcomputationlistNode1 = new AComputationList(listNode3);
        }
	nodeList.add(pcomputationlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AForeachComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        PActor pactorNode2;
        TTIdentifier ttidentifierNode3;
        PComputation pcomputationNode4;
        pactorNode2 = (PActor)nodeArrayList2.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList3.get(0);
        pcomputationNode4 = (PComputation)nodeArrayList4.get(0);

        pcomputationNode1 = new AForeachComputation(pactorNode2, ttidentifierNode3, pcomputationNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AForeachSetComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        PActor pactorNode2;
        TTIdentifier ttidentifierNode3;
        PComputationList pcomputationlistNode4;
        pactorNode2 = (PActor)nodeArrayList2.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList3.get(0);
        pcomputationlistNode4 = (PComputationList)nodeArrayList5.get(0);

        pcomputationNode1 = new AForeachSetComputation(pactorNode2, ttidentifierNode3, pcomputationlistNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AForeachTableComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        TTIdentifier ttidentifierNode3;
        PComputation pcomputationNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList5.get(0);
        pcomputationNode4 = (PComputation)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachTableComputation(ttidentifierNode2, ttidentifierNode3, pcomputationNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AForeachTableSetComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        TTIdentifier ttidentifierNode3;
        PComputationList pcomputationlistNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList5.get(0);
        pcomputationlistNode4 = (PComputationList)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachTableSetComputation(ttidentifierNode2, ttidentifierNode3, pcomputationlistNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AForeachSequenceComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PSequence psequenceNode3;
        PComputation pcomputationNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        psequenceNode3 = (PSequence)nodeArrayList5.get(0);
        pcomputationNode4 = (PComputation)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachSequenceComputation(ttidentifierNode2, psequenceNode3, pcomputationNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AForeachSequenceSetComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PSequence psequenceNode3;
        PComputationList pcomputationlistNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        psequenceNode3 = (PSequence)nodeArrayList5.get(0);
        pcomputationlistNode4 = (PComputationList)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachSequenceSetComputation(ttidentifierNode2, psequenceNode3, pcomputationlistNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce APrintComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);

        pcomputationNode1 = new APrintComputation(ttidentifierNode2);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce APrintAttrComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TTIdentifier ttidentifierNode4;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        ttidentifierNode4 = (TTIdentifier)nodeArrayList4.get(0);

        pcomputationNode1 = new APrintAttrComputation(listNode3, ttidentifierNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce APrintTimelineComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList4.get(0);

        pcomputationNode1 = new APrintTimelineComputation(ttidentifierNode2);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce APrintLengthComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);

        pcomputationNode1 = new APrintLengthComputation(ttidentifierNode2);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce APrintTableitemComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        TTIdentifier ttidentifierNode3;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList4.get(0);

        pcomputationNode1 = new APrintTableitemComputation(ttidentifierNode2, ttidentifierNode3);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce ATableComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PActor pactorNode3;
        PType ptypeNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);
        pactorNode3 = (PActor)nodeArrayList5.get(0);
        ptypeNode4 = (PType)nodeArrayList7.get(0);

        pcomputationNode1 = new ATableComputation(ttidentifierNode2, pactorNode3, ptypeNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce ABarchartComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);

        pcomputationNode1 = new ABarchartComputation(ttidentifierNode2);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce AListComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PSequence psequenceNode3;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);
        psequenceNode3 = (PSequence)nodeArrayList6.get(0);

        pcomputationNode1 = new AListComputation(ttidentifierNode2, psequenceNode3);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce ASingletonAttrList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PType ptypeNode1;
        ptypeNode1 = (PType)nodeArrayList1.get(0);
	if(ptypeNode1 != null)
	{
	  listNode2.add(ptypeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce AListAttrList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PType ptypeNode1;
        LinkedList listNode2 = new LinkedList();
        ptypeNode1 = (PType)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(ptypeNode1 != null)
	{
	  listNode3.add(ptypeNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce AAsequence1Sequence */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequence psequenceNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        psequenceNode1 = new ASequence(listNode2);
        }
	nodeList.add(psequenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce AAsequence2Sequence */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequence psequenceNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        psequenceNode1 = new ASequence(listNode3);
        }
	nodeList.add(psequenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce ANotSequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequenceItem psequenceitemNode1;
        {
            // Block
        PEventItem peventitemNode2;
        peventitemNode2 = (PEventItem)nodeArrayList3.get(0);

        psequenceitemNode1 = new ANotSequenceItem(peventitemNode2);
        }
	nodeList.add(psequenceitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce ADisjunctionSequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequenceItem psequenceitemNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        psequenceitemNode1 = new ADisjunctionSequenceItem(listNode3);
        }
	nodeList.add(psequenceitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce APermutationSequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequenceItem psequenceitemNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        psequenceitemNode1 = new APermutationSequenceItem(listNode3);
        }
	nodeList.add(psequenceitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce ASingletonDisjunctionList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PEventItem peventitemNode1;
        peventitemNode1 = (PEventItem)nodeArrayList1.get(0);
	if(peventitemNode1 != null)
	{
	  listNode2.add(peventitemNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce AListDisjunctionList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PEventItem peventitemNode1;
        LinkedList listNode2 = new LinkedList();
        peventitemNode1 = (PEventItem)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(peventitemNode1 != null)
	{
	  listNode3.add(peventitemNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce ASingletonPermutationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PEventItem peventitemNode1;
        peventitemNode1 = (PEventItem)nodeArrayList1.get(0);
	if(peventitemNode1 != null)
	{
	  listNode2.add(peventitemNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce AListPermutationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PEventItem peventitemNode1;
        LinkedList listNode2 = new LinkedList();
        peventitemNode1 = (PEventItem)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(peventitemNode1 != null)
	{
	  listNode3.add(peventitemNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce ANoparamEventItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PEventItem peventitemNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList1.get(0);

        peventitemNode1 = new ANoparamEventItem(ttidentifierNode2);
        }
	nodeList.add(peventitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce AParamEventItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PEventItem peventitemNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        ttidentifierNode2 = (TTIdentifier)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        peventitemNode1 = new AParamEventItem(ttidentifierNode2, listNode4);
        }
	nodeList.add(peventitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce ASingletonEventParamList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TTIdentifier ttidentifierNode1;
        ttidentifierNode1 = (TTIdentifier)nodeArrayList1.get(0);
	if(ttidentifierNode1 != null)
	{
	  listNode2.add(ttidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce AListEventParamList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TTIdentifier ttidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        ttidentifierNode1 = (TTIdentifier)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(ttidentifierNode1 != null)
	{
	  listNode3.add(ttidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce AIdType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTIdType ttidtypeNode2;
        ttidtypeNode2 = (TTIdType)nodeArrayList1.get(0);

        ptypeNode1 = new AIdType(ttidtypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce ASexType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTSexType ttsextypeNode2;
        ttsextypeNode2 = (TTSexType)nodeArrayList1.get(0);

        ptypeNode1 = new ASexType(ttsextypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce ABirthyearType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTBirthyearType ttbirthyeartypeNode2;
        ttbirthyeartypeNode2 = (TTBirthyearType)nodeArrayList1.get(0);

        ptypeNode1 = new ABirthyearType(ttbirthyeartypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce ADiagnosisType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTDiagnosisType ttdiagnosistypeNode2;
        ttdiagnosistypeNode2 = (TTDiagnosisType)nodeArrayList1.get(0);

        ptypeNode1 = new ADiagnosisType(ttdiagnosistypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce APostalcodeType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTPostalcodeType ttpostalcodetypeNode2;
        ttpostalcodetypeNode2 = (TTPostalcodeType)nodeArrayList1.get(0);

        ptypeNode1 = new APostalcodeType(ttpostalcodetypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AYearsType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTYearsType ttyearstypeNode2;
        ttyearstypeNode2 = (TTYearsType)nodeArrayList1.get(0);

        ptypeNode1 = new AYearsType(ttyearstypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AMonthsType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTMonthsType ttmonthstypeNode2;
        ttmonthstypeNode2 = (TTMonthsType)nodeArrayList1.get(0);

        ptypeNode1 = new AMonthsType(ttmonthstypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce ADaysType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTDaysType ttdaystypeNode2;
        ttdaystypeNode2 = (TTDaysType)nodeArrayList1.get(0);

        ptypeNode1 = new ADaysType(ttdaystypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce ADateType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTDateType ttdatetypeNode2;
        ttdatetypeNode2 = (TTDateType)nodeArrayList1.get(0);

        ptypeNode1 = new ADateType(ttdatetypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce AEventType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTEventType tteventtypeNode2;
        tteventtypeNode2 = (TTEventType)nodeArrayList1.get(0);

        ptypeNode1 = new AEventType(tteventtypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce ATimeType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTTimeType tttimetypeNode2;
        tttimetypeNode2 = (TTTimeType)nodeArrayList1.get(0);

        ptypeNode1 = new ATimeType(tttimetypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AAnumberlistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTNumber ttnumberNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttnumberNode2 = (TTNumber)nodeArrayList1.get(0);

        ptypedlistNode1 = new ANumberListItemTypedList(ttnumberNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce AAnumberlistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTNumber ttnumberNode2;
        PTypedListTail ptypedlisttailNode3;
        ttnumberNode2 = (TTNumber)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new ANumberListItemTypedList(ttnumberNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce AAmalelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTMale ttmaleNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttmaleNode2 = (TTMale)nodeArrayList1.get(0);

        ptypedlistNode1 = new AMaleListItemTypedList(ttmaleNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce AAmalelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTMale ttmaleNode2;
        PTypedListTail ptypedlisttailNode3;
        ttmaleNode2 = (TTMale)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new AMaleListItemTypedList(ttmaleNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AAfemalelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTFemale ttfemaleNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttfemaleNode2 = (TTFemale)nodeArrayList1.get(0);

        ptypedlistNode1 = new AFemaleListItemTypedList(ttfemaleNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce AAfemalelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTFemale ttfemaleNode2;
        PTypedListTail ptypedlisttailNode3;
        ttfemaleNode2 = (TTFemale)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new AFemaleListItemTypedList(ttfemaleNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce APostalcodeListItemTypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTPostalcode ttpostalcodeNode2;
        PTypedListTail ptypedlisttailNode3;
        ttpostalcodeNode2 = (TTPostalcode)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new APostalcodeListItemTypedList(ttpostalcodeNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce AAyearlistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTYear ttyearNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttyearNode2 = (TTYear)nodeArrayList1.get(0);

        ptypedlistNode1 = new AYearListItemTypedList(ttyearNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce AAyearlistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTYear ttyearNode2;
        PTypedListTail ptypedlisttailNode3;
        ttyearNode2 = (TTYear)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new AYearListItemTypedList(ttyearNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce AAmonthslistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTMonth ttmonthNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttmonthNode2 = (TTMonth)nodeArrayList1.get(0);

        ptypedlistNode1 = new AMonthsListItemTypedList(ttmonthNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce AAmonthslistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTMonth ttmonthNode2;
        PTypedListTail ptypedlisttailNode3;
        ttmonthNode2 = (TTMonth)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new AMonthsListItemTypedList(ttmonthNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce AAdayslistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTDay ttdayNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttdayNode2 = (TTDay)nodeArrayList1.get(0);

        ptypedlistNode1 = new ADaysListItemTypedList(ttdayNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce AAdayslistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTDay ttdayNode2;
        PTypedListTail ptypedlisttailNode3;
        ttdayNode2 = (TTDay)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new ADaysListItemTypedList(ttdayNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce AAdatelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTDate ttdateNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttdateNode2 = (TTDate)nodeArrayList1.get(0);

        ptypedlistNode1 = new ADateListItemTypedList(ttdateNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce AAdatelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTDate ttdateNode2;
        PTypedListTail ptypedlisttailNode3;
        ttdateNode2 = (TTDate)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new ADateListItemTypedList(ttdateNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new78() /* reduce AAstringlistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList1.get(0);

        ptypedlistNode1 = new AStringListItemTypedList(ttidentifierNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new79() /* reduce AAstringlistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PTypedListTail ptypedlisttailNode3;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new AStringListItemTypedList(ttidentifierNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new80() /* reduce AAtimelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTTime tttimeNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        tttimeNode2 = (TTTime)nodeArrayList1.get(0);

        ptypedlistNode1 = new ATimeListItemTypedList(tttimeNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new81() /* reduce AAtimelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTTime tttimeNode2;
        PTypedListTail ptypedlisttailNode3;
        tttimeNode2 = (TTTime)nodeArrayList1.get(0);
        ptypedlisttailNode3 = (PTypedListTail)nodeArrayList2.get(0);

        ptypedlistNode1 = new ATimeListItemTypedList(tttimeNode2, ptypedlisttailNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new82() /* reduce AAexpandablelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TLAngle tlangleNode2;
        TTIdentifier ttidentifierNode3;
        TRAngle trangleNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        tlangleNode2 = (TLAngle)nodeArrayList1.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList2.get(0);
        trangleNode4 = (TRAngle)nodeArrayList3.get(0);

        ptypedlistNode1 = new AExpandableListItemTypedList(tlangleNode2, ttidentifierNode3, trangleNode4, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new83() /* reduce AAexpandablelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TLAngle tlangleNode2;
        TTIdentifier ttidentifierNode3;
        TRAngle trangleNode4;
        PTypedListTail ptypedlisttailNode5;
        tlangleNode2 = (TLAngle)nodeArrayList1.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList2.get(0);
        trangleNode4 = (TRAngle)nodeArrayList3.get(0);
        ptypedlisttailNode5 = (PTypedListTail)nodeArrayList4.get(0);

        ptypedlistNode1 = new AExpandableListItemTypedList(tlangleNode2, ttidentifierNode3, trangleNode4, ptypedlisttailNode5);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new84() /* reduce ATypedListTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedListTail ptypedlisttailNode1;
        {
            // Block
        TComma tcommaNode2;
        PTypedList ptypedlistNode3;
        tcommaNode2 = (TComma)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlisttailNode1 = new ATypedListTail(tcommaNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlisttailNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new85() /* reduce ATypedName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedName ptypednameNode1;
        {
            // Block
        PType ptypeNode2;
        TTIdentifier ttidentifierNode3;
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList2.get(0);

        ptypednameNode1 = new ATypedName(ptypeNode2, ttidentifierNode3);
        }
	nodeList.add(ptypednameNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new86() /* reduce APatientActor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PActor pactorNode1;
        {
            // Block
        TTPatientType ttpatienttypeNode2;
        ttpatienttypeNode2 = (TTPatientType)nodeArrayList1.get(0);

        pactorNode1 = new APatientActor(ttpatienttypeNode2);
        }
	nodeList.add(pactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new87() /* reduce ADoctorActor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PActor pactorNode1;
        {
            // Block
        TTDoctorType ttdoctortypeNode2;
        ttdoctortypeNode2 = (TTDoctorType)nodeArrayList1.get(0);

        pactorNode1 = new ADoctorActor(ttdoctortypeNode2);
        }
	nodeList.add(pactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new88() /* reduce ADiagnosisActor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PActor pactorNode1;
        {
            // Block
        TTDiagnosisType ttdiagnosistypeNode2;
        ttdiagnosistypeNode2 = (TTDiagnosisType)nodeArrayList1.get(0);

        pactorNode1 = new ADiagnosisActor(ttdiagnosistypeNode2);
        }
	nodeList.add(pactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new89() /* reduce ATerminal$GroupDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PGroupDefinitions pgroupdefinitionsNode1;
        pgroupdefinitionsNode1 = (PGroupDefinitions)nodeArrayList1.get(0);
	if(pgroupdefinitionsNode1 != null)
	{
	  listNode2.add(pgroupdefinitionsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new90() /* reduce ANonTerminal$GroupDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PGroupDefinitions pgroupdefinitionsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pgroupdefinitionsNode2 = (PGroupDefinitions)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pgroupdefinitionsNode2 != null)
	{
	  listNode3.add(pgroupdefinitionsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new91() /* reduce ATerminal$FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PFilterDefinitions pfilterdefinitionsNode1;
        pfilterdefinitionsNode1 = (PFilterDefinitions)nodeArrayList1.get(0);
	if(pfilterdefinitionsNode1 != null)
	{
	  listNode2.add(pfilterdefinitionsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new92() /* reduce ANonTerminal$FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PFilterDefinitions pfilterdefinitionsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pfilterdefinitionsNode2 = (PFilterDefinitions)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pfilterdefinitionsNode2 != null)
	{
	  listNode3.add(pfilterdefinitionsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new93() /* reduce ATerminal$Dependencies */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PDependencies pdependenciesNode1;
        pdependenciesNode1 = (PDependencies)nodeArrayList1.get(0);
	if(pdependenciesNode1 != null)
	{
	  listNode2.add(pdependenciesNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new94() /* reduce ANonTerminal$Dependencies */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PDependencies pdependenciesNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdependenciesNode2 = (PDependencies)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdependenciesNode2 != null)
	{
	  listNode3.add(pdependenciesNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new95() /* reduce ATerminal$FilterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PFilterList pfilterlistNode1;
        pfilterlistNode1 = (PFilterList)nodeArrayList1.get(0);
	if(pfilterlistNode1 != null)
	{
	  listNode2.add(pfilterlistNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new96() /* reduce ANonTerminal$FilterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PFilterList pfilterlistNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pfilterlistNode2 = (PFilterList)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pfilterlistNode2 != null)
	{
	  listNode3.add(pfilterlistNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new97() /* reduce ATerminal$Computation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PComputation pcomputationNode1;
        pcomputationNode1 = (PComputation)nodeArrayList1.get(0);
	if(pcomputationNode1 != null)
	{
	  listNode2.add(pcomputationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new98() /* reduce ANonTerminal$Computation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PComputation pcomputationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomputationNode2 = (PComputation)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomputationNode2 != null)
	{
	  listNode3.add(pcomputationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new99() /* reduce ATerminal$SequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PSequenceItem psequenceitemNode1;
        psequenceitemNode1 = (PSequenceItem)nodeArrayList1.get(0);
	if(psequenceitemNode1 != null)
	{
	  listNode2.add(psequenceitemNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new100() /* reduce ANonTerminal$SequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PSequenceItem psequenceitemNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        psequenceitemNode2 = (PSequenceItem)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(psequenceitemNode2 != null)
	{
	  listNode3.add(psequenceitemNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, },
			{{-1, ERROR, 1}, {66, SHIFT, 4}, },
			{{-1, ERROR, 2}, {68, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {8, SHIFT, 5}, {9, SHIFT, 6}, {10, SHIFT, 7}, {11, SHIFT, 8}, {12, SHIFT, 9}, {46, SHIFT, 10}, },
			{{-1, ERROR, 4}, {44, SHIFT, 16}, },
			{{-1, ERROR, 5}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, REDUCE, 14}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, REDUCE, 12}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, REDUCE, 18}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, REDUCE, 16}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, ERROR, 10}, {13, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {21, SHIFT, 40}, {47, SHIFT, 41}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 14}, {8, SHIFT, 5}, {9, SHIFT, 6}, {10, SHIFT, 7}, {11, SHIFT, 8}, {12, SHIFT, 9}, {46, SHIFT, 10}, },
			{{-1, ERROR, 15}, {9, SHIFT, 6}, {10, SHIFT, 7}, {11, SHIFT, 8}, {12, SHIFT, 9}, {46, SHIFT, 10}, },
			{{-1, ERROR, 16}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 28}, {65, SHIFT, 51}, },
			{{-1, ERROR, 29}, {50, SHIFT, 52}, },
			{{-1, REDUCE, 95}, },
			{{-1, ERROR, 31}, {49, SHIFT, 53}, },
			{{-1, REDUCE, 15}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, REDUCE, 13}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, REDUCE, 19}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, REDUCE, 17}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, ERROR, 36}, {19, SHIFT, 55}, {29, SHIFT, 56}, {33, SHIFT, 57}, {34, SHIFT, 58}, {35, SHIFT, 59}, },
			{{-1, ERROR, 37}, {65, SHIFT, 61}, },
			{{-1, ERROR, 38}, {25, SHIFT, 62}, {26, SHIFT, 63}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, {65, SHIFT, 64}, },
			{{-1, ERROR, 39}, {65, SHIFT, 67}, },
			{{-1, ERROR, 40}, {65, SHIFT, 68}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 97}, },
			{{-1, ERROR, 43}, {13, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {21, SHIFT, 40}, {47, SHIFT, 69}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 46}, {9, SHIFT, 6}, {10, SHIFT, 7}, {11, SHIFT, 8}, {12, SHIFT, 9}, {46, SHIFT, 10}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 49}, {45, SHIFT, 72}, },
			{{-1, REDUCE, 6}, {48, SHIFT, 73}, },
			{{-1, REDUCE, 85}, },
			{{-1, ERROR, 52}, {46, SHIFT, 74}, },
			{{-1, ERROR, 53}, {27, SHIFT, 75}, {28, SHIFT, 76}, {51, SHIFT, 77}, {58, SHIFT, 78}, {59, SHIFT, 79}, {60, SHIFT, 80}, {61, SHIFT, 81}, {62, SHIFT, 82}, {63, SHIFT, 83}, {64, SHIFT, 84}, {65, SHIFT, 85}, },
			{{-1, REDUCE, 96}, },
			{{-1, ERROR, 55}, {65, SHIFT, 87}, },
			{{-1, ERROR, 56}, {65, SHIFT, 88}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 88}, },
			{{-1, ERROR, 60}, {65, SHIFT, 89}, },
			{{-1, ERROR, 61}, {50, SHIFT, 90}, },
			{{-1, ERROR, 62}, {2, SHIFT, 91}, },
			{{-1, ERROR, 63}, {65, SHIFT, 92}, },
			{{-1, REDUCE, 29}, {53, SHIFT, 93}, },
			{{-1, ERROR, 65}, {2, SHIFT, 94}, },
			{{-1, REDUCE, 37}, {48, SHIFT, 95}, },
			{{-1, ERROR, 67}, {50, SHIFT, 96}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 98}, },
			{{-1, REDUCE, 3}, },
			{{-1, ERROR, 72}, {67, SHIFT, 97}, },
			{{-1, ERROR, 73}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, ERROR, 74}, {27, SHIFT, 75}, {28, SHIFT, 76}, {51, SHIFT, 77}, {58, SHIFT, 78}, {59, SHIFT, 79}, {60, SHIFT, 80}, {61, SHIFT, 81}, {62, SHIFT, 82}, {63, SHIFT, 83}, {64, SHIFT, 84}, {65, SHIFT, 85}, },
			{{-1, REDUCE, 65}, {48, SHIFT, 100}, },
			{{-1, REDUCE, 67}, {48, SHIFT, 100}, },
			{{-1, ERROR, 77}, {65, SHIFT, 103}, },
			{{-1, ERROR, 78}, {48, SHIFT, 100}, },
			{{-1, REDUCE, 76}, {48, SHIFT, 100}, },
			{{-1, REDUCE, 80}, {48, SHIFT, 100}, },
			{{-1, REDUCE, 74}, {48, SHIFT, 100}, },
			{{-1, REDUCE, 70}, {48, SHIFT, 100}, },
			{{-1, REDUCE, 72}, {48, SHIFT, 100}, },
			{{-1, REDUCE, 63}, {48, SHIFT, 100}, },
			{{-1, REDUCE, 78}, {48, SHIFT, 100}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 87}, {18, SHIFT, 112}, },
			{{-1, ERROR, 88}, {2, SHIFT, 113}, },
			{{-1, ERROR, 89}, {13, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {21, SHIFT, 40}, {46, SHIFT, 114}, },
			{{-1, ERROR, 90}, {24, SHIFT, 116}, },
			{{-1, ERROR, 91}, {65, SHIFT, 117}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 93}, {65, SHIFT, 118}, },
			{{-1, ERROR, 94}, {65, SHIFT, 119}, },
			{{-1, ERROR, 95}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, ERROR, 96}, {19, SHIFT, 121}, },
			{{-1, REDUCE, 4}, {5, SHIFT, 122}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 99}, {47, SHIFT, 125}, },
			{{-1, ERROR, 100}, {27, SHIFT, 75}, {28, SHIFT, 76}, {51, SHIFT, 77}, {58, SHIFT, 78}, {59, SHIFT, 79}, {60, SHIFT, 80}, {61, SHIFT, 81}, {62, SHIFT, 82}, {63, SHIFT, 83}, {64, SHIFT, 84}, {65, SHIFT, 85}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 103}, {52, SHIFT, 127}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 112}, {53, SHIFT, 128}, },
			{{-1, ERROR, 113}, {65, SHIFT, 130}, },
			{{-1, ERROR, 114}, {46, SHIFT, 10}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 116}, {33, SHIFT, 57}, {34, SHIFT, 58}, {35, SHIFT, 59}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 118}, {54, SHIFT, 133}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 121}, {18, SHIFT, 134}, },
			{{-1, ERROR, 122}, {57, SHIFT, 135}, },
			{{-1, REDUCE, 93}, },
			{{-1, REDUCE, 5}, {5, SHIFT, 122}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 82}, {48, SHIFT, 100}, },
			{{-1, ERROR, 128}, {6, SHIFT, 139}, {44, SHIFT, 140}, {46, SHIFT, 141}, {65, SHIFT, 142}, },
			{{-1, ERROR, 129}, {13, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {21, SHIFT, 40}, {46, SHIFT, 10}, },
			{{-1, ERROR, 130}, {13, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {21, SHIFT, 40}, {46, SHIFT, 10}, },
			{{-1, ERROR, 131}, {47, SHIFT, 151}, },
			{{-1, ERROR, 132}, {1, SHIFT, 152}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 134}, {53, SHIFT, 128}, },
			{{-1, REDUCE, 9}, {48, SHIFT, 154}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 139}, {54, SHIFT, 155}, },
			{{-1, ERROR, 140}, {7, SHIFT, 156}, },
			{{-1, ERROR, 141}, {65, SHIFT, 142}, },
			{{-1, REDUCE, 48}, {44, SHIFT, 159}, },
			{{-1, REDUCE, 99}, },
			{{-1, ERROR, 144}, {55, SHIFT, 160}, },
			{{-1, REDUCE, 44}, {56, SHIFT, 161}, },
			{{-1, ERROR, 146}, {6, SHIFT, 162}, {44, SHIFT, 140}, {46, SHIFT, 141}, {65, SHIFT, 142}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 152}, {30, SHIFT, 17}, {31, SHIFT, 18}, {32, SHIFT, 19}, {35, SHIFT, 20}, {36, SHIFT, 21}, {37, SHIFT, 22}, {38, SHIFT, 23}, {39, SHIFT, 24}, {40, SHIFT, 25}, {41, SHIFT, 26}, {43, SHIFT, 27}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 154}, {57, SHIFT, 135}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 156}, {65, SHIFT, 142}, },
			{{-1, ERROR, 157}, {47, SHIFT, 167}, },
			{{-1, REDUCE, 46}, {48, SHIFT, 168}, },
			{{-1, ERROR, 159}, {65, SHIFT, 169}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 161}, {65, SHIFT, 142}, },
			{{-1, ERROR, 162}, {54, SHIFT, 172}, },
			{{-1, REDUCE, 100}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 166}, {45, SHIFT, 173}, },
			{{-1, ERROR, 167}, {55, SHIFT, 174}, },
			{{-1, ERROR, 168}, {65, SHIFT, 142}, },
			{{-1, REDUCE, 50}, {48, SHIFT, 176}, },
			{{-1, ERROR, 170}, {45, SHIFT, 177}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 173}, {55, SHIFT, 178}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 176}, {65, SHIFT, 169}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 51}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 49}, {73, 98}, },
			{{-1, 123}, {124, 137}, },
			{{-1, 136}, {154, 165}, },
			{{-1, 11}, {14, 44}, },
			{{-1, 12}, {15, 47}, {46, 47}, },
			{{-1, 30}, {32, 54}, {33, 54}, {34, 54}, {35, 54}, },
			{{-1, 13}, {14, 45}, {15, 48}, {46, 71}, {114, 131}, {129, 147}, {130, 149}, },
			{{-1, 42}, {43, 70}, {89, 115}, {129, 148}, {130, 150}, },
			{{-1, 65}, {95, 120}, },
			{{-1, 129}, {134, 153}, },
			{{-1, 143}, {146, 163}, },
			{{-1, 144}, {161, 171}, },
			{{-1, 157}, {168, 175}, },
			{{-1, 145}, {141, 158}, {156, 166}, {168, 158}, },
			{{-1, 170}, {176, 179}, },
			{{-1, 31}, {5, 28}, {16, 28}, {38, 66}, {73, 28}, {95, 66}, {152, 164}, },
			{{-1, 86}, {74, 99}, {100, 126}, },
			{{-1, 101}, {76, 102}, {78, 104}, {79, 105}, {80, 106}, {81, 107}, {82, 108}, {83, 109}, {84, 110}, {85, 111}, {127, 138}, },
			{{-1, 50}, {5, 29}, },
			{{-1, 60}, {116, 132}, },
			{{-1, 14}, },
			{{-1, 15}, {14, 46}, },
			{{-1, 124}, },
			{{-1, 32}, {7, 33}, {8, 34}, {9, 35}, },
			{{-1, 43}, },
			{{-1, 146}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'script'",
			"expecting: t script name",
			"expecting: EOF",
			"expecting: 'group', 'period is', 'population is', 'doctors are', 'events are', '{'",
			"expecting: '('",
			"expecting: 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', 'Times'",
			"expecting: 'period is', 'population is', 'doctors are', 'events are', 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', 'Times', '{'",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '}'",
			"expecting: 'period is', 'population is', 'doctors are', 'events are', '{'",
			"expecting: 'of', 'foreach', 'table', 'print', 'list', 'barchart', '}', ',', ':', t identifier",
			"expecting: t identifier",
			"expecting: '='",
			"expecting: ':'",
			"expecting: t sequence, 'element', t patient type, t doctor type, 'Diagnosis'",
			"expecting: 'timeline', 'length of', 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', 'Times', t identifier",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '}', EOF",
			"expecting: ')'",
			"expecting: ')', ','",
			"expecting: ')', ',', '='",
			"expecting: '{'",
			"expecting: t male, t female, '<', t postalcode, t date, t time, t day, t year, t month, t number, t identifier",
			"expecting: 'by', t identifier",
			"expecting: 'of'",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '}', '['",
			"expecting: 'of', ','",
			"expecting: t doc comment",
			"expecting: 'period is', 'population is', 'doctors are', 'events are', 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', 'Times', '{', '}', ','",
			"expecting: ','",
			"expecting: 'like'",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '{'",
			"expecting: 'count'",
			"expecting: t sequence",
			"expecting: 'use', 'group', 'period is', 'population is', 'doctors are', 'events are', '{'",
			"expecting: '}'",
			"expecting: 'period is', 'population is', 'doctors are', 'events are', 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', 'Times', '{', '}'",
			"expecting: '>'",
			"expecting: '['",
			"expecting: t patient type, t doctor type, 'Diagnosis'",
			"expecting: ']'",
			"expecting: t group file",
			"expecting: 'end', '(', '{', t identifier",
			"expecting: 'by'",
			"expecting: 'use', 'group', 'period is', 'population is', 'doctors are', 'events are', '{', ','",
			"expecting: 'not'",
			"expecting: '(', ')', '}', ',', '->', '|'",
			"expecting: '->'",
			"expecting: '->', '|'",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '{', '}'",
			"expecting: '}', ','",
			"expecting: ')', '}', ',', '->', '|'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 6, 6, 6, 6, 7, 3, 8, 2, 3, 8, 5, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 11, 6, 12, 6, 6, 6, 6, 13, 10, 14, 10, 10, 15, 7, 7, 3, 2, 8, 8, 2, 16, 17, 18, 19, 20, 6, 10, 10, 21, 21, 21, 10, 11, 22, 10, 23, 22, 24, 11, 7, 15, 7, 2, 25, 5, 20, 26, 26, 10, 27, 26, 26, 26, 26, 26, 26, 26, 6, 28, 22, 29, 30, 10, 7, 10, 10, 5, 31, 32, 16, 33, 20, 34, 34, 35, 34, 34, 34, 34, 34, 34, 34, 34, 36, 10, 19, 7, 37, 7, 38, 7, 22, 28, 39, 32, 32, 3, 34, 26, 40, 29, 29, 33, 41, 7, 36, 42, 32, 32, 34, 38, 43, 10, 44, 40, 45, 46, 40, 7, 7, 7, 7, 7, 5, 7, 39, 47, 10, 33, 48, 10, 40, 10, 38, 40, 7, 32, 16, 45, 10, 17, 16, 45, 47, 45, 40, 33, 10, 49, 40, 16, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
