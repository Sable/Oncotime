/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.parser;

import otc.lexer.*;
import otc.node.*;
import otc.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAoncoprogramprogram1Program */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce AAoncoprogramprogram2Program */
		    {
			ArrayList list = new1();
			push(goTo(0), list);
		    }
		    break;
                    case 2: /* reduce AAoncoprogramprogram3Program */
		    {
			ArrayList list = new2();
			push(goTo(0), list);
		    }
		    break;
                    case 3: /* reduce AAoncoprogramprogram4Program */
		    {
			ArrayList list = new3();
			push(goTo(0), list);
		    }
		    break;
                    case 4: /* reduce AAgroupfileprogram1Program */
		    {
			ArrayList list = new4();
			push(goTo(0), list);
		    }
		    break;
                    case 5: /* reduce AAgroupfileprogram2Program */
		    {
			ArrayList list = new5();
			push(goTo(0), list);
		    }
		    break;
                    case 6: /* reduce AAheader1Header */
		    {
			ArrayList list = new6();
			push(goTo(1), list);
		    }
		    break;
                    case 7: /* reduce AAheader2Header */
		    {
			ArrayList list = new7();
			push(goTo(1), list);
		    }
		    break;
                    case 8: /* reduce AAheader3Header */
		    {
			ArrayList list = new8();
			push(goTo(1), list);
		    }
		    break;
                    case 9: /* reduce AAheader4Header */
		    {
			ArrayList list = new9();
			push(goTo(1), list);
		    }
		    break;
                    case 10: /* reduce AHeadParameters */
		    {
			ArrayList list = new10();
			push(goTo(2), list);
		    }
		    break;
                    case 11: /* reduce ATailParameters */
		    {
			ArrayList list = new11();
			push(goTo(2), list);
		    }
		    break;
                    case 12: /* reduce AUselistDependencies */
		    {
			ArrayList list = new12();
			push(goTo(3), list);
		    }
		    break;
                    case 13: /* reduce AHeadDependenciesList */
		    {
			ArrayList list = new13();
			push(goTo(4), list);
		    }
		    break;
                    case 14: /* reduce ATailDependenciesList */
		    {
			ArrayList list = new14();
			push(goTo(4), list);
		    }
		    break;
                    case 15: /* reduce AGroupDefinitions */
		    {
			ArrayList list = new15();
			push(goTo(5), list);
		    }
		    break;
                    case 16: /* reduce AApopulationfilterfilterdefinitions1FilterDefinitions */
		    {
			ArrayList list = new16();
			push(goTo(6), list);
		    }
		    break;
                    case 17: /* reduce AApopulationfilterfilterdefinitions2FilterDefinitions */
		    {
			ArrayList list = new17();
			push(goTo(6), list);
		    }
		    break;
                    case 18: /* reduce AAperiodfilterfilterdefinitions1FilterDefinitions */
		    {
			ArrayList list = new18();
			push(goTo(6), list);
		    }
		    break;
                    case 19: /* reduce AAperiodfilterfilterdefinitions2FilterDefinitions */
		    {
			ArrayList list = new19();
			push(goTo(6), list);
		    }
		    break;
                    case 20: /* reduce AAeventfilterfilterdefinitions1FilterDefinitions */
		    {
			ArrayList list = new20();
			push(goTo(6), list);
		    }
		    break;
                    case 21: /* reduce AAeventfilterfilterdefinitions2FilterDefinitions */
		    {
			ArrayList list = new21();
			push(goTo(6), list);
		    }
		    break;
                    case 22: /* reduce AAdoctorfilterfilterdefinitions1FilterDefinitions */
		    {
			ArrayList list = new22();
			push(goTo(6), list);
		    }
		    break;
                    case 23: /* reduce AAdoctorfilterfilterdefinitions2FilterDefinitions */
		    {
			ArrayList list = new23();
			push(goTo(6), list);
		    }
		    break;
                    case 24: /* reduce AFilterList */
		    {
			ArrayList list = new24();
			push(goTo(7), list);
		    }
		    break;
                    case 25: /* reduce AAcomputationlist1ComputationList */
		    {
			ArrayList list = new25();
			push(goTo(8), list);
		    }
		    break;
                    case 26: /* reduce AAcomputationlist2ComputationList */
		    {
			ArrayList list = new26();
			push(goTo(8), list);
		    }
		    break;
                    case 27: /* reduce AForeachComputation */
		    {
			ArrayList list = new27();
			push(goTo(9), list);
		    }
		    break;
                    case 28: /* reduce AForeachSetComputation */
		    {
			ArrayList list = new28();
			push(goTo(9), list);
		    }
		    break;
                    case 29: /* reduce AForeachTableComputation */
		    {
			ArrayList list = new29();
			push(goTo(9), list);
		    }
		    break;
                    case 30: /* reduce AForeachTableSetComputation */
		    {
			ArrayList list = new30();
			push(goTo(9), list);
		    }
		    break;
                    case 31: /* reduce AForeachSequenceComputation */
		    {
			ArrayList list = new31();
			push(goTo(9), list);
		    }
		    break;
                    case 32: /* reduce AForeachSequenceSetComputation */
		    {
			ArrayList list = new32();
			push(goTo(9), list);
		    }
		    break;
                    case 33: /* reduce AForeachMemeberComputation */
		    {
			ArrayList list = new33();
			push(goTo(9), list);
		    }
		    break;
                    case 34: /* reduce AForeachMemberSetComputation */
		    {
			ArrayList list = new34();
			push(goTo(9), list);
		    }
		    break;
                    case 35: /* reduce APrintComputation */
		    {
			ArrayList list = new35();
			push(goTo(9), list);
		    }
		    break;
                    case 36: /* reduce APrintAttrComputation */
		    {
			ArrayList list = new36();
			push(goTo(9), list);
		    }
		    break;
                    case 37: /* reduce APrintTimelineComputation */
		    {
			ArrayList list = new37();
			push(goTo(9), list);
		    }
		    break;
                    case 38: /* reduce APrintLengthComputation */
		    {
			ArrayList list = new38();
			push(goTo(9), list);
		    }
		    break;
                    case 39: /* reduce APrintTableitemComputation */
		    {
			ArrayList list = new39();
			push(goTo(9), list);
		    }
		    break;
                    case 40: /* reduce ATableComputation */
		    {
			ArrayList list = new40();
			push(goTo(9), list);
		    }
		    break;
                    case 41: /* reduce ABarchartComputation */
		    {
			ArrayList list = new41();
			push(goTo(9), list);
		    }
		    break;
                    case 42: /* reduce AListComputation */
		    {
			ArrayList list = new42();
			push(goTo(9), list);
		    }
		    break;
                    case 43: /* reduce ASingletonAttrList */
		    {
			ArrayList list = new43();
			push(goTo(10), list);
		    }
		    break;
                    case 44: /* reduce AListAttrList */
		    {
			ArrayList list = new44();
			push(goTo(10), list);
		    }
		    break;
                    case 45: /* reduce AAsequence1Sequence */
		    {
			ArrayList list = new45();
			push(goTo(11), list);
		    }
		    break;
                    case 46: /* reduce AAsequence2Sequence */
		    {
			ArrayList list = new46();
			push(goTo(11), list);
		    }
		    break;
                    case 47: /* reduce ANotSequenceItem */
		    {
			ArrayList list = new47();
			push(goTo(12), list);
		    }
		    break;
                    case 48: /* reduce ADisjunctionSequenceItem */
		    {
			ArrayList list = new48();
			push(goTo(12), list);
		    }
		    break;
                    case 49: /* reduce APermutationSequenceItem */
		    {
			ArrayList list = new49();
			push(goTo(12), list);
		    }
		    break;
                    case 50: /* reduce ASingletonDisjunctionList */
		    {
			ArrayList list = new50();
			push(goTo(13), list);
		    }
		    break;
                    case 51: /* reduce AListDisjunctionList */
		    {
			ArrayList list = new51();
			push(goTo(13), list);
		    }
		    break;
                    case 52: /* reduce ASingletonPermutationList */
		    {
			ArrayList list = new52();
			push(goTo(14), list);
		    }
		    break;
                    case 53: /* reduce AListPermutationList */
		    {
			ArrayList list = new53();
			push(goTo(14), list);
		    }
		    break;
                    case 54: /* reduce ANoparamEventItem */
		    {
			ArrayList list = new54();
			push(goTo(15), list);
		    }
		    break;
                    case 55: /* reduce AParamEventItem */
		    {
			ArrayList list = new55();
			push(goTo(15), list);
		    }
		    break;
                    case 56: /* reduce ASingletonEventParamList */
		    {
			ArrayList list = new56();
			push(goTo(16), list);
		    }
		    break;
                    case 57: /* reduce AListEventParamList */
		    {
			ArrayList list = new57();
			push(goTo(16), list);
		    }
		    break;
                    case 58: /* reduce AIdType */
		    {
			ArrayList list = new58();
			push(goTo(17), list);
		    }
		    break;
                    case 59: /* reduce ASexType */
		    {
			ArrayList list = new59();
			push(goTo(17), list);
		    }
		    break;
                    case 60: /* reduce ABirthyearType */
		    {
			ArrayList list = new60();
			push(goTo(17), list);
		    }
		    break;
                    case 61: /* reduce ADiagnosisType */
		    {
			ArrayList list = new61();
			push(goTo(17), list);
		    }
		    break;
                    case 62: /* reduce APostalcodeType */
		    {
			ArrayList list = new62();
			push(goTo(17), list);
		    }
		    break;
                    case 63: /* reduce AYearsType */
		    {
			ArrayList list = new63();
			push(goTo(17), list);
		    }
		    break;
                    case 64: /* reduce AMonthsType */
		    {
			ArrayList list = new64();
			push(goTo(17), list);
		    }
		    break;
                    case 65: /* reduce ADaysType */
		    {
			ArrayList list = new65();
			push(goTo(17), list);
		    }
		    break;
                    case 66: /* reduce ADateType */
		    {
			ArrayList list = new66();
			push(goTo(17), list);
		    }
		    break;
                    case 67: /* reduce AEventType */
		    {
			ArrayList list = new67();
			push(goTo(17), list);
		    }
		    break;
                    case 68: /* reduce AHourType */
		    {
			ArrayList list = new68();
			push(goTo(17), list);
		    }
		    break;
                    case 69: /* reduce AAnumberlistitemtypedlist1TypedList */
		    {
			ArrayList list = new69();
			push(goTo(18), list);
		    }
		    break;
                    case 70: /* reduce AAnumberlistitemtypedlist2TypedList */
		    {
			ArrayList list = new70();
			push(goTo(18), list);
		    }
		    break;
                    case 71: /* reduce AAmalelistitemtypedlist1TypedList */
		    {
			ArrayList list = new71();
			push(goTo(18), list);
		    }
		    break;
                    case 72: /* reduce AAmalelistitemtypedlist2TypedList */
		    {
			ArrayList list = new72();
			push(goTo(18), list);
		    }
		    break;
                    case 73: /* reduce AAfemalelistitemtypedlist1TypedList */
		    {
			ArrayList list = new73();
			push(goTo(18), list);
		    }
		    break;
                    case 74: /* reduce AAfemalelistitemtypedlist2TypedList */
		    {
			ArrayList list = new74();
			push(goTo(18), list);
		    }
		    break;
                    case 75: /* reduce AApostalcodelistitemtypedlist1TypedList */
		    {
			ArrayList list = new75();
			push(goTo(18), list);
		    }
		    break;
                    case 76: /* reduce AApostalcodelistitemtypedlist2TypedList */
		    {
			ArrayList list = new76();
			push(goTo(18), list);
		    }
		    break;
                    case 77: /* reduce AAyearlistitemtypedlist1TypedList */
		    {
			ArrayList list = new77();
			push(goTo(18), list);
		    }
		    break;
                    case 78: /* reduce AAyearlistitemtypedlist2TypedList */
		    {
			ArrayList list = new78();
			push(goTo(18), list);
		    }
		    break;
                    case 79: /* reduce AAmonthslistitemtypedlist1TypedList */
		    {
			ArrayList list = new79();
			push(goTo(18), list);
		    }
		    break;
                    case 80: /* reduce AAmonthslistitemtypedlist2TypedList */
		    {
			ArrayList list = new80();
			push(goTo(18), list);
		    }
		    break;
                    case 81: /* reduce AAdayslistitemtypedlist1TypedList */
		    {
			ArrayList list = new81();
			push(goTo(18), list);
		    }
		    break;
                    case 82: /* reduce AAdayslistitemtypedlist2TypedList */
		    {
			ArrayList list = new82();
			push(goTo(18), list);
		    }
		    break;
                    case 83: /* reduce AAdatelistitemtypedlist1TypedList */
		    {
			ArrayList list = new83();
			push(goTo(18), list);
		    }
		    break;
                    case 84: /* reduce AAdatelistitemtypedlist2TypedList */
		    {
			ArrayList list = new84();
			push(goTo(18), list);
		    }
		    break;
                    case 85: /* reduce AAstringlistitemtypedlist1TypedList */
		    {
			ArrayList list = new85();
			push(goTo(18), list);
		    }
		    break;
                    case 86: /* reduce AAstringlistitemtypedlist2TypedList */
		    {
			ArrayList list = new86();
			push(goTo(18), list);
		    }
		    break;
                    case 87: /* reduce AAhourlistitemtypedlist1TypedList */
		    {
			ArrayList list = new87();
			push(goTo(18), list);
		    }
		    break;
                    case 88: /* reduce AAhourlistitemtypedlist2TypedList */
		    {
			ArrayList list = new88();
			push(goTo(18), list);
		    }
		    break;
                    case 89: /* reduce AAexpandablelistitemtypedlist1TypedList */
		    {
			ArrayList list = new89();
			push(goTo(18), list);
		    }
		    break;
                    case 90: /* reduce AAexpandablelistitemtypedlist2TypedList */
		    {
			ArrayList list = new90();
			push(goTo(18), list);
		    }
		    break;
                    case 91: /* reduce AAalllistitemtypedlist1TypedList */
		    {
			ArrayList list = new91();
			push(goTo(18), list);
		    }
		    break;
                    case 92: /* reduce AAalllistitemtypedlist2TypedList */
		    {
			ArrayList list = new92();
			push(goTo(18), list);
		    }
		    break;
                    case 93: /* reduce AArangelistitemtypedlist1TypedList */
		    {
			ArrayList list = new93();
			push(goTo(18), list);
		    }
		    break;
                    case 94: /* reduce AArangelistitemtypedlist2TypedList */
		    {
			ArrayList list = new94();
			push(goTo(18), list);
		    }
		    break;
                    case 95: /* reduce ATypedListTail */
		    {
			ArrayList list = new95();
			push(goTo(19), list);
		    }
		    break;
                    case 96: /* reduce ATypedName */
		    {
			ArrayList list = new96();
			push(goTo(20), list);
		    }
		    break;
                    case 97: /* reduce APatientActor */
		    {
			ArrayList list = new97();
			push(goTo(21), list);
		    }
		    break;
                    case 98: /* reduce ADoctorActor */
		    {
			ArrayList list = new98();
			push(goTo(21), list);
		    }
		    break;
                    case 99: /* reduce ADiagnosisActor */
		    {
			ArrayList list = new99();
			push(goTo(21), list);
		    }
		    break;
                    case 100: /* reduce ATerminal$GroupDefinitions */
		    {
			ArrayList list = new100();
			push(goTo(22), list);
		    }
		    break;
                    case 101: /* reduce ANonTerminal$GroupDefinitions */
		    {
			ArrayList list = new101();
			push(goTo(22), list);
		    }
		    break;
                    case 102: /* reduce ATerminal$FilterDefinitions */
		    {
			ArrayList list = new102();
			push(goTo(23), list);
		    }
		    break;
                    case 103: /* reduce ANonTerminal$FilterDefinitions */
		    {
			ArrayList list = new103();
			push(goTo(23), list);
		    }
		    break;
                    case 104: /* reduce ATerminal$Dependencies */
		    {
			ArrayList list = new104();
			push(goTo(24), list);
		    }
		    break;
                    case 105: /* reduce ANonTerminal$Dependencies */
		    {
			ArrayList list = new105();
			push(goTo(24), list);
		    }
		    break;
                    case 106: /* reduce ATerminal$FilterList */
		    {
			ArrayList list = new106();
			push(goTo(25), list);
		    }
		    break;
                    case 107: /* reduce ANonTerminal$FilterList */
		    {
			ArrayList list = new107();
			push(goTo(25), list);
		    }
		    break;
                    case 108: /* reduce ATerminal$Computation */
		    {
			ArrayList list = new108();
			push(goTo(26), list);
		    }
		    break;
                    case 109: /* reduce ANonTerminal$Computation */
		    {
			ArrayList list = new109();
			push(goTo(26), list);
		    }
		    break;
                    case 110: /* reduce ATerminal$SequenceItem */
		    {
			ArrayList list = new110();
			push(goTo(27), list);
		    }
		    break;
                    case 111: /* reduce ANonTerminal$SequenceItem */
		    {
			ArrayList list = new111();
			push(goTo(27), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PProgram node1 = (PProgram) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAoncoprogramprogram1Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        PHeader pheaderNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode4 = new LinkedList();
        PComputationList pcomputationlistNode5;
        pheaderNode2 = (PHeader)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        }
        pcomputationlistNode5 = (PComputationList)nodeArrayList2.get(0);

        pprogramNode1 = new AOncoprogramProgram(pheaderNode2, listNode3, listNode4, pcomputationlistNode5);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAoncoprogramprogram2Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        PHeader pheaderNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        PComputationList pcomputationlistNode6;
        pheaderNode2 = (PHeader)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        pcomputationlistNode6 = (PComputationList)nodeArrayList3.get(0);

        pprogramNode1 = new AOncoprogramProgram(pheaderNode2, listNode4, listNode5, pcomputationlistNode6);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAoncoprogramprogram3Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        PHeader pheaderNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        PComputationList pcomputationlistNode6;
        pheaderNode2 = (PHeader)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        pcomputationlistNode6 = (PComputationList)nodeArrayList3.get(0);

        pprogramNode1 = new AOncoprogramProgram(pheaderNode2, listNode3, listNode5, pcomputationlistNode6);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAoncoprogramprogram4Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        PHeader pheaderNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        PComputationList pcomputationlistNode7;
        pheaderNode2 = (PHeader)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pcomputationlistNode7 = (PComputationList)nodeArrayList4.get(0);

        pprogramNode1 = new AOncoprogramProgram(pheaderNode2, listNode4, listNode6, pcomputationlistNode7);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AAgroupfileprogram1Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        TTDocComment ttdoccommentNode2;
        LinkedList listNode3 = new LinkedList();
        ttdoccommentNode2 = (TTDocComment)nodeArrayList1.get(0);
        {
            // Block
        }

        pprogramNode1 = new AGroupfileProgram(ttdoccommentNode2, listNode3);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AAgroupfileprogram2Program */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProgram pprogramNode1;
        {
            // Block
        TTDocComment ttdoccommentNode2;
        LinkedList listNode4 = new LinkedList();
        ttdoccommentNode2 = (TTDocComment)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pprogramNode1 = new AGroupfileProgram(ttdoccommentNode2, listNode4);
        }
	nodeList.add(pprogramNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AAheader1Header */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PHeader pheaderNode1;
        {
            // Block
        TTScriptName ttscriptnameNode2;
        LinkedList listNode3 = new LinkedList();
        TTDocComment ttdoccommentNode4;
        LinkedList listNode5 = new LinkedList();
        ttscriptnameNode2 = (TTScriptName)nodeArrayList2.get(0);
        {
            // Block
        }
        ttdoccommentNode4 = (TTDocComment)nodeArrayList5.get(0);
        {
            // Block
        }

        pheaderNode1 = new AHeader(ttscriptnameNode2, listNode3, ttdoccommentNode4, listNode5);
        }
	nodeList.add(pheaderNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AAheader2Header */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PHeader pheaderNode1;
        {
            // Block
        TTScriptName ttscriptnameNode2;
        LinkedList listNode4 = new LinkedList();
        TTDocComment ttdoccommentNode5;
        LinkedList listNode6 = new LinkedList();
        ttscriptnameNode2 = (TTScriptName)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        ttdoccommentNode5 = (TTDocComment)nodeArrayList6.get(0);
        {
            // Block
        }

        pheaderNode1 = new AHeader(ttscriptnameNode2, listNode4, ttdoccommentNode5, listNode6);
        }
	nodeList.add(pheaderNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AAheader3Header */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PHeader pheaderNode1;
        {
            // Block
        TTScriptName ttscriptnameNode2;
        LinkedList listNode3 = new LinkedList();
        TTDocComment ttdoccommentNode4;
        LinkedList listNode6 = new LinkedList();
        ttscriptnameNode2 = (TTScriptName)nodeArrayList2.get(0);
        {
            // Block
        }
        ttdoccommentNode4 = (TTDocComment)nodeArrayList5.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList6.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pheaderNode1 = new AHeader(ttscriptnameNode2, listNode3, ttdoccommentNode4, listNode6);
        }
	nodeList.add(pheaderNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AAheader4Header */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PHeader pheaderNode1;
        {
            // Block
        TTScriptName ttscriptnameNode2;
        LinkedList listNode4 = new LinkedList();
        TTDocComment ttdoccommentNode5;
        LinkedList listNode7 = new LinkedList();
        ttscriptnameNode2 = (TTScriptName)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        ttdoccommentNode5 = (TTDocComment)nodeArrayList6.get(0);
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList7.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pheaderNode1 = new AHeader(ttscriptnameNode2, listNode4, ttdoccommentNode5, listNode7);
        }
	nodeList.add(pheaderNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce AHeadParameters */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTypedName ptypednameNode1;
        ptypednameNode1 = (PTypedName)nodeArrayList1.get(0);
	if(ptypednameNode1 != null)
	{
	  listNode2.add(ptypednameNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce ATailParameters */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PTypedName ptypednameNode1;
        LinkedList listNode2 = new LinkedList();
        ptypednameNode1 = (PTypedName)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(ptypednameNode1 != null)
	{
	  listNode3.add(ptypednameNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AUselistDependencies */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDependencies pdependenciesNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pdependenciesNode1 = new ADependencies(listNode3);
        }
	nodeList.add(pdependenciesNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AHeadDependenciesList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TTGroupFile ttgroupfileNode1;
        ttgroupfileNode1 = (TTGroupFile)nodeArrayList1.get(0);
	if(ttgroupfileNode1 != null)
	{
	  listNode2.add(ttgroupfileNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce ATailDependenciesList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TTGroupFile ttgroupfileNode1;
        LinkedList listNode2 = new LinkedList();
        ttgroupfileNode1 = (TTGroupFile)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(ttgroupfileNode1 != null)
	{
	  listNode3.add(ttgroupfileNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AGroupDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGroupDefinitions pgroupdefinitionsNode1;
        {
            // Block
        PTypedName ptypednameNode2;
        PTypedList ptypedlistNode3;
        ptypednameNode2 = (PTypedName)nodeArrayList2.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList5.get(0);

        pgroupdefinitionsNode1 = new AGroupDefinitions(ptypednameNode2, ptypedlistNode3);
        }
	nodeList.add(pgroupdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AApopulationfilterfilterdefinitions1FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pfilterdefinitionsNode1 = new APopulationFilterFilterDefinitions(listNode2);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AApopulationfilterfilterdefinitions2FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfilterdefinitionsNode1 = new APopulationFilterFilterDefinitions(listNode3);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AAperiodfilterfilterdefinitions1FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pfilterdefinitionsNode1 = new APeriodFilterFilterDefinitions(listNode2);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAperiodfilterfilterdefinitions2FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfilterdefinitionsNode1 = new APeriodFilterFilterDefinitions(listNode3);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AAeventfilterfilterdefinitions1FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pfilterdefinitionsNode1 = new AEventFilterFilterDefinitions(listNode2);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AAeventfilterfilterdefinitions2FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfilterdefinitionsNode1 = new AEventFilterFilterDefinitions(listNode3);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AAdoctorfilterfilterdefinitions1FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pfilterdefinitionsNode1 = new ADoctorFilterFilterDefinitions(listNode2);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AAdoctorfilterfilterdefinitions2FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterDefinitions pfilterdefinitionsNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pfilterdefinitionsNode1 = new ADoctorFilterFilterDefinitions(listNode3);
        }
	nodeList.add(pfilterdefinitionsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AFilterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PFilterList pfilterlistNode1;
        {
            // Block
        PType ptypeNode2;
        PTypedList ptypedlistNode3;
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList3.get(0);

        pfilterlistNode1 = new AFilterList(ptypeNode2, ptypedlistNode3);
        }
	nodeList.add(pfilterlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AAcomputationlist1ComputationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputationList pcomputationlistNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        pcomputationlistNode1 = new AComputationList(listNode2);
        }
	nodeList.add(pcomputationlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AAcomputationlist2ComputationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputationList pcomputationlistNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pcomputationlistNode1 = new AComputationList(listNode3);
        }
	nodeList.add(pcomputationlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AForeachComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        PActor pactorNode2;
        TTIdentifier ttidentifierNode3;
        PComputation pcomputationNode4;
        pactorNode2 = (PActor)nodeArrayList2.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList3.get(0);
        pcomputationNode4 = (PComputation)nodeArrayList4.get(0);

        pcomputationNode1 = new AForeachComputation(pactorNode2, ttidentifierNode3, pcomputationNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AForeachSetComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        PActor pactorNode2;
        TTIdentifier ttidentifierNode3;
        PComputationList pcomputationlistNode4;
        pactorNode2 = (PActor)nodeArrayList2.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList3.get(0);
        pcomputationlistNode4 = (PComputationList)nodeArrayList4.get(0);

        pcomputationNode1 = new AForeachSetComputation(pactorNode2, ttidentifierNode3, pcomputationlistNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AForeachTableComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        TTIdentifier ttidentifierNode3;
        PComputation pcomputationNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList5.get(0);
        pcomputationNode4 = (PComputation)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachTableComputation(ttidentifierNode2, ttidentifierNode3, pcomputationNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce AForeachTableSetComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        TTIdentifier ttidentifierNode3;
        PComputationList pcomputationlistNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList5.get(0);
        pcomputationlistNode4 = (PComputationList)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachTableSetComputation(ttidentifierNode2, ttidentifierNode3, pcomputationlistNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce AForeachSequenceComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PSequence psequenceNode3;
        PComputation pcomputationNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        psequenceNode3 = (PSequence)nodeArrayList5.get(0);
        pcomputationNode4 = (PComputation)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachSequenceComputation(ttidentifierNode2, psequenceNode3, pcomputationNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce AForeachSequenceSetComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PSequence psequenceNode3;
        PComputationList pcomputationlistNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        psequenceNode3 = (PSequence)nodeArrayList5.get(0);
        pcomputationlistNode4 = (PComputationList)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachSequenceSetComputation(ttidentifierNode2, psequenceNode3, pcomputationlistNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AForeachMemeberComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        TTIdentifier ttidentifierNode3;
        PComputation pcomputationNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList5.get(0);
        pcomputationNode4 = (PComputation)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachMemberComputation(ttidentifierNode2, ttidentifierNode3, pcomputationNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce AForeachMemberSetComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        TTIdentifier ttidentifierNode3;
        PComputationList pcomputationlistNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList5.get(0);
        pcomputationlistNode4 = (PComputationList)nodeArrayList6.get(0);

        pcomputationNode1 = new AForeachMemberSetComputation(ttidentifierNode2, ttidentifierNode3, pcomputationlistNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce APrintComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);

        pcomputationNode1 = new APrintComputation(ttidentifierNode2);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce APrintAttrComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TTIdentifier ttidentifierNode4;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        ttidentifierNode4 = (TTIdentifier)nodeArrayList4.get(0);

        pcomputationNode1 = new APrintAttrComputation(listNode3, ttidentifierNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce APrintTimelineComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList4.get(0);

        pcomputationNode1 = new APrintTimelineComputation(ttidentifierNode2);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce APrintLengthComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList3.get(0);

        pcomputationNode1 = new APrintLengthComputation(ttidentifierNode2);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce APrintTableitemComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        TTIdentifier ttidentifierNode3;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList4.get(0);

        pcomputationNode1 = new APrintTableitemComputation(ttidentifierNode2, ttidentifierNode3);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce ATableComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PActor pactorNode3;
        PType ptypeNode4;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);
        pactorNode3 = (PActor)nodeArrayList5.get(0);
        ptypeNode4 = (PType)nodeArrayList7.get(0);

        pcomputationNode1 = new ATableComputation(ttidentifierNode2, pactorNode3, ptypeNode4);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce ABarchartComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);

        pcomputationNode1 = new ABarchartComputation(ttidentifierNode2);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce AListComputation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PComputation pcomputationNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PSequence psequenceNode3;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);
        psequenceNode3 = (PSequence)nodeArrayList6.get(0);

        pcomputationNode1 = new AListComputation(ttidentifierNode2, psequenceNode3);
        }
	nodeList.add(pcomputationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce ASingletonAttrList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PType ptypeNode1;
        ptypeNode1 = (PType)nodeArrayList1.get(0);
	if(ptypeNode1 != null)
	{
	  listNode2.add(ptypeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce AListAttrList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PType ptypeNode1;
        LinkedList listNode2 = new LinkedList();
        ptypeNode1 = (PType)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(ptypeNode1 != null)
	{
	  listNode3.add(ptypeNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce AAsequence1Sequence */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequence psequenceNode1;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        }

        psequenceNode1 = new ASequence(listNode2);
        }
	nodeList.add(psequenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce AAsequence2Sequence */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequence psequenceNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        psequenceNode1 = new ASequence(listNode3);
        }
	nodeList.add(psequenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce ANotSequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequenceItem psequenceitemNode1;
        {
            // Block
        PEventItem peventitemNode2;
        peventitemNode2 = (PEventItem)nodeArrayList3.get(0);

        psequenceitemNode1 = new ANotSequenceItem(peventitemNode2);
        }
	nodeList.add(psequenceitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce ADisjunctionSequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequenceItem psequenceitemNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        psequenceitemNode1 = new ADisjunctionSequenceItem(listNode3);
        }
	nodeList.add(psequenceitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce APermutationSequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSequenceItem psequenceitemNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        psequenceitemNode1 = new APermutationSequenceItem(listNode3);
        }
	nodeList.add(psequenceitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce ASingletonDisjunctionList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PEventItem peventitemNode1;
        peventitemNode1 = (PEventItem)nodeArrayList1.get(0);
	if(peventitemNode1 != null)
	{
	  listNode2.add(peventitemNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce AListDisjunctionList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PEventItem peventitemNode1;
        LinkedList listNode2 = new LinkedList();
        peventitemNode1 = (PEventItem)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(peventitemNode1 != null)
	{
	  listNode3.add(peventitemNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce ASingletonPermutationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PEventItem peventitemNode1;
        peventitemNode1 = (PEventItem)nodeArrayList1.get(0);
	if(peventitemNode1 != null)
	{
	  listNode2.add(peventitemNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce AListPermutationList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PEventItem peventitemNode1;
        LinkedList listNode2 = new LinkedList();
        peventitemNode1 = (PEventItem)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(peventitemNode1 != null)
	{
	  listNode3.add(peventitemNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce ANoparamEventItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PEventItem peventitemNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList1.get(0);

        peventitemNode1 = new ANoparamEventItem(ttidentifierNode2);
        }
	nodeList.add(peventitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AParamEventItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PEventItem peventitemNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        ttidentifierNode2 = (TTIdentifier)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        peventitemNode1 = new AParamEventItem(ttidentifierNode2, listNode4);
        }
	nodeList.add(peventitemNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce ASingletonEventParamList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TTIdentifier ttidentifierNode1;
        ttidentifierNode1 = (TTIdentifier)nodeArrayList1.get(0);
	if(ttidentifierNode1 != null)
	{
	  listNode2.add(ttidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AListEventParamList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TTIdentifier ttidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        ttidentifierNode1 = (TTIdentifier)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(ttidentifierNode1 != null)
	{
	  listNode3.add(ttidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AIdType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTIdType ttidtypeNode2;
        ttidtypeNode2 = (TTIdType)nodeArrayList1.get(0);

        ptypeNode1 = new AIdType(ttidtypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce ASexType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTSexType ttsextypeNode2;
        ttsextypeNode2 = (TTSexType)nodeArrayList1.get(0);

        ptypeNode1 = new ASexType(ttsextypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce ABirthyearType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTBirthyearType ttbirthyeartypeNode2;
        ttbirthyeartypeNode2 = (TTBirthyearType)nodeArrayList1.get(0);

        ptypeNode1 = new ABirthyearType(ttbirthyeartypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce ADiagnosisType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTDiagnosisType ttdiagnosistypeNode2;
        ttdiagnosistypeNode2 = (TTDiagnosisType)nodeArrayList1.get(0);

        ptypeNode1 = new ADiagnosisType(ttdiagnosistypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce APostalcodeType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTPostalcodeType ttpostalcodetypeNode2;
        ttpostalcodetypeNode2 = (TTPostalcodeType)nodeArrayList1.get(0);

        ptypeNode1 = new APostalcodeType(ttpostalcodetypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AYearsType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTYearsType ttyearstypeNode2;
        ttyearstypeNode2 = (TTYearsType)nodeArrayList1.get(0);

        ptypeNode1 = new AYearsType(ttyearstypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce AMonthsType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTMonthsType ttmonthstypeNode2;
        ttmonthstypeNode2 = (TTMonthsType)nodeArrayList1.get(0);

        ptypeNode1 = new AMonthsType(ttmonthstypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce ADaysType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTDaysType ttdaystypeNode2;
        ttdaystypeNode2 = (TTDaysType)nodeArrayList1.get(0);

        ptypeNode1 = new ADaysType(ttdaystypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce ADateType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTDateType ttdatetypeNode2;
        ttdatetypeNode2 = (TTDateType)nodeArrayList1.get(0);

        ptypeNode1 = new ADateType(ttdatetypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce AEventType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTEventType tteventtypeNode2;
        tteventtypeNode2 = (TTEventType)nodeArrayList1.get(0);

        ptypeNode1 = new AEventType(tteventtypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce AHourType */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PType ptypeNode1;
        {
            // Block
        TTHoursType tthourstypeNode2;
        tthourstypeNode2 = (TTHoursType)nodeArrayList1.get(0);

        ptypeNode1 = new AHourType(tthourstypeNode2);
        }
	nodeList.add(ptypeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce AAnumberlistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTNumber ttnumberNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttnumberNode2 = (TTNumber)nodeArrayList1.get(0);

        ptypedlistNode1 = new ANumberListItemTypedList(ttnumberNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce AAnumberlistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTNumber ttnumberNode2;
        PTypedList ptypedlistNode3;
        ttnumberNode2 = (TTNumber)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new ANumberListItemTypedList(ttnumberNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce AAmalelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTMale ttmaleNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttmaleNode2 = (TTMale)nodeArrayList1.get(0);

        ptypedlistNode1 = new AMaleListItemTypedList(ttmaleNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce AAmalelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTMale ttmaleNode2;
        PTypedList ptypedlistNode3;
        ttmaleNode2 = (TTMale)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new AMaleListItemTypedList(ttmaleNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce AAfemalelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTFemale ttfemaleNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttfemaleNode2 = (TTFemale)nodeArrayList1.get(0);

        ptypedlistNode1 = new AFemaleListItemTypedList(ttfemaleNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce AAfemalelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTFemale ttfemaleNode2;
        PTypedList ptypedlistNode3;
        ttfemaleNode2 = (TTFemale)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new AFemaleListItemTypedList(ttfemaleNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce AApostalcodelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTPostalcode ttpostalcodeNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttpostalcodeNode2 = (TTPostalcode)nodeArrayList1.get(0);

        ptypedlistNode1 = new APostalcodeListItemTypedList(ttpostalcodeNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce AApostalcodelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTPostalcode ttpostalcodeNode2;
        PTypedList ptypedlistNode3;
        ttpostalcodeNode2 = (TTPostalcode)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new APostalcodeListItemTypedList(ttpostalcodeNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce AAyearlistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTYear ttyearNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttyearNode2 = (TTYear)nodeArrayList1.get(0);

        ptypedlistNode1 = new AYearListItemTypedList(ttyearNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new78() /* reduce AAyearlistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTYear ttyearNode2;
        PTypedList ptypedlistNode3;
        ttyearNode2 = (TTYear)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new AYearListItemTypedList(ttyearNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new79() /* reduce AAmonthslistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTMonth ttmonthNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttmonthNode2 = (TTMonth)nodeArrayList1.get(0);

        ptypedlistNode1 = new AMonthsListItemTypedList(ttmonthNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new80() /* reduce AAmonthslistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTMonth ttmonthNode2;
        PTypedList ptypedlistNode3;
        ttmonthNode2 = (TTMonth)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new AMonthsListItemTypedList(ttmonthNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new81() /* reduce AAdayslistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTDay ttdayNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttdayNode2 = (TTDay)nodeArrayList1.get(0);

        ptypedlistNode1 = new ADaysListItemTypedList(ttdayNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new82() /* reduce AAdayslistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTDay ttdayNode2;
        PTypedList ptypedlistNode3;
        ttdayNode2 = (TTDay)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new ADaysListItemTypedList(ttdayNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new83() /* reduce AAdatelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTDate ttdateNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttdateNode2 = (TTDate)nodeArrayList1.get(0);

        ptypedlistNode1 = new ADateListItemTypedList(ttdateNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new84() /* reduce AAdatelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTDate ttdateNode2;
        PTypedList ptypedlistNode3;
        ttdateNode2 = (TTDate)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new ADateListItemTypedList(ttdateNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new85() /* reduce AAstringlistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList1.get(0);

        ptypedlistNode1 = new AStringListItemTypedList(ttidentifierNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new86() /* reduce AAstringlistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PTypedList ptypedlistNode3;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new AStringListItemTypedList(ttidentifierNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new87() /* reduce AAhourlistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTHour tthourNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        tthourNode2 = (TTHour)nodeArrayList1.get(0);

        ptypedlistNode1 = new AHourListItemTypedList(tthourNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new88() /* reduce AAhourlistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTHour tthourNode2;
        PTypedList ptypedlistNode3;
        tthourNode2 = (TTHour)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new AHourListItemTypedList(tthourNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new89() /* reduce AAexpandablelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);

        ptypedlistNode1 = new AExpandableListItemTypedList(ttidentifierNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new90() /* reduce AAexpandablelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTIdentifier ttidentifierNode2;
        PTypedList ptypedlistNode3;
        ttidentifierNode2 = (TTIdentifier)nodeArrayList2.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList4.get(0);

        ptypedlistNode1 = new AExpandableListItemTypedList(ttidentifierNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new91() /* reduce AAalllistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTStar ttstarNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttstarNode2 = (TTStar)nodeArrayList1.get(0);

        ptypedlistNode1 = new AAllListItemTypedList(ttstarNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new92() /* reduce AAalllistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTStar ttstarNode2;
        PTypedList ptypedlistNode3;
        ttstarNode2 = (TTStar)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new AAllListItemTypedList(ttstarNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new93() /* reduce AArangelistitemtypedlist1TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTRange ttrangeNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        ttrangeNode2 = (TTRange)nodeArrayList1.get(0);

        ptypedlistNode1 = new ARangeListItemTypedList(ttrangeNode2, null);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new94() /* reduce AArangelistitemtypedlist2TypedList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        {
            // Block
        TTRange ttrangeNode2;
        PTypedList ptypedlistNode3;
        ttrangeNode2 = (TTRange)nodeArrayList1.get(0);
        ptypedlistNode3 = (PTypedList)nodeArrayList2.get(0);

        ptypedlistNode1 = new ARangeListItemTypedList(ttrangeNode2, ptypedlistNode3);
        }
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new95() /* reduce ATypedListTail */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedList ptypedlistNode1;
        ptypedlistNode1 = (PTypedList)nodeArrayList2.get(0);
	nodeList.add(ptypedlistNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new96() /* reduce ATypedName */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTypedName ptypednameNode1;
        {
            // Block
        PType ptypeNode2;
        TTIdentifier ttidentifierNode3;
        ptypeNode2 = (PType)nodeArrayList1.get(0);
        ttidentifierNode3 = (TTIdentifier)nodeArrayList2.get(0);

        ptypednameNode1 = new ATypedName(ptypeNode2, ttidentifierNode3);
        }
	nodeList.add(ptypednameNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new97() /* reduce APatientActor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PActor pactorNode1;
        {
            // Block
        TTPatientType ttpatienttypeNode2;
        ttpatienttypeNode2 = (TTPatientType)nodeArrayList1.get(0);

        pactorNode1 = new APatientActor(ttpatienttypeNode2);
        }
	nodeList.add(pactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new98() /* reduce ADoctorActor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PActor pactorNode1;
        {
            // Block
        TTDoctorType ttdoctortypeNode2;
        ttdoctortypeNode2 = (TTDoctorType)nodeArrayList1.get(0);

        pactorNode1 = new ADoctorActor(ttdoctortypeNode2);
        }
	nodeList.add(pactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new99() /* reduce ADiagnosisActor */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PActor pactorNode1;
        {
            // Block
        TTDiagnosisType ttdiagnosistypeNode2;
        ttdiagnosistypeNode2 = (TTDiagnosisType)nodeArrayList1.get(0);

        pactorNode1 = new ADiagnosisActor(ttdiagnosistypeNode2);
        }
	nodeList.add(pactorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new100() /* reduce ATerminal$GroupDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PGroupDefinitions pgroupdefinitionsNode1;
        pgroupdefinitionsNode1 = (PGroupDefinitions)nodeArrayList1.get(0);
	if(pgroupdefinitionsNode1 != null)
	{
	  listNode2.add(pgroupdefinitionsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new101() /* reduce ANonTerminal$GroupDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PGroupDefinitions pgroupdefinitionsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pgroupdefinitionsNode2 = (PGroupDefinitions)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pgroupdefinitionsNode2 != null)
	{
	  listNode3.add(pgroupdefinitionsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new102() /* reduce ATerminal$FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PFilterDefinitions pfilterdefinitionsNode1;
        pfilterdefinitionsNode1 = (PFilterDefinitions)nodeArrayList1.get(0);
	if(pfilterdefinitionsNode1 != null)
	{
	  listNode2.add(pfilterdefinitionsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new103() /* reduce ANonTerminal$FilterDefinitions */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PFilterDefinitions pfilterdefinitionsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pfilterdefinitionsNode2 = (PFilterDefinitions)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pfilterdefinitionsNode2 != null)
	{
	  listNode3.add(pfilterdefinitionsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new104() /* reduce ATerminal$Dependencies */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PDependencies pdependenciesNode1;
        pdependenciesNode1 = (PDependencies)nodeArrayList1.get(0);
	if(pdependenciesNode1 != null)
	{
	  listNode2.add(pdependenciesNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new105() /* reduce ANonTerminal$Dependencies */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PDependencies pdependenciesNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdependenciesNode2 = (PDependencies)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdependenciesNode2 != null)
	{
	  listNode3.add(pdependenciesNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new106() /* reduce ATerminal$FilterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PFilterList pfilterlistNode1;
        pfilterlistNode1 = (PFilterList)nodeArrayList1.get(0);
	if(pfilterlistNode1 != null)
	{
	  listNode2.add(pfilterlistNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new107() /* reduce ANonTerminal$FilterList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PFilterList pfilterlistNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pfilterlistNode2 = (PFilterList)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pfilterlistNode2 != null)
	{
	  listNode3.add(pfilterlistNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new108() /* reduce ATerminal$Computation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PComputation pcomputationNode1;
        pcomputationNode1 = (PComputation)nodeArrayList1.get(0);
	if(pcomputationNode1 != null)
	{
	  listNode2.add(pcomputationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new109() /* reduce ANonTerminal$Computation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PComputation pcomputationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomputationNode2 = (PComputation)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomputationNode2 != null)
	{
	  listNode3.add(pcomputationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new110() /* reduce ATerminal$SequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PSequenceItem psequenceitemNode1;
        psequenceitemNode1 = (PSequenceItem)nodeArrayList1.get(0);
	if(psequenceitemNode1 != null)
	{
	  listNode2.add(psequenceitemNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new111() /* reduce ANonTerminal$SequenceItem */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PSequenceItem psequenceitemNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        psequenceitemNode2 = (PSequenceItem)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(psequenceitemNode2 != null)
	{
	  listNode3.add(psequenceitemNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, {69, SHIFT, 2}, },
			{{-1, ERROR, 1}, {68, SHIFT, 5}, },
			{{-1, REDUCE, 4}, {8, SHIFT, 6}, },
			{{-1, ERROR, 3}, {70, ACCEPT, -1}, },
			{{-1, ERROR, 4}, {8, SHIFT, 6}, {9, SHIFT, 9}, {10, SHIFT, 10}, {11, SHIFT, 11}, {12, SHIFT, 12}, {46, SHIFT, 13}, },
			{{-1, ERROR, 5}, {44, SHIFT, 18}, },
			{{-1, ERROR, 6}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, REDUCE, 100}, },
			{{-1, REDUCE, 5}, {8, SHIFT, 6}, },
			{{-1, REDUCE, 18}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, REDUCE, 16}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, REDUCE, 22}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, REDUCE, 20}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, ERROR, 13}, {13, SHIFT, 39}, {14, SHIFT, 40}, {16, SHIFT, 41}, {20, SHIFT, 42}, {21, SHIFT, 43}, {47, SHIFT, 44}, },
			{{-1, REDUCE, 102}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 16}, {8, SHIFT, 6}, {9, SHIFT, 9}, {10, SHIFT, 10}, {11, SHIFT, 11}, {12, SHIFT, 12}, {46, SHIFT, 13}, },
			{{-1, ERROR, 17}, {9, SHIFT, 9}, {10, SHIFT, 10}, {11, SHIFT, 11}, {12, SHIFT, 12}, {46, SHIFT, 13}, },
			{{-1, ERROR, 18}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, {45, SHIFT, 51}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 30}, {67, SHIFT, 54}, },
			{{-1, ERROR, 31}, {50, SHIFT, 55}, },
			{{-1, REDUCE, 101}, },
			{{-1, REDUCE, 106}, },
			{{-1, ERROR, 34}, {49, SHIFT, 56}, },
			{{-1, REDUCE, 19}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, REDUCE, 17}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, REDUCE, 23}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, REDUCE, 21}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, ERROR, 39}, {19, SHIFT, 58}, {23, SHIFT, 59}, {29, SHIFT, 60}, {33, SHIFT, 61}, {34, SHIFT, 62}, {35, SHIFT, 63}, },
			{{-1, ERROR, 40}, {67, SHIFT, 65}, },
			{{-1, ERROR, 41}, {25, SHIFT, 66}, {26, SHIFT, 67}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, {67, SHIFT, 68}, },
			{{-1, ERROR, 42}, {67, SHIFT, 71}, },
			{{-1, ERROR, 43}, {67, SHIFT, 72}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 108}, },
			{{-1, ERROR, 46}, {13, SHIFT, 39}, {14, SHIFT, 40}, {16, SHIFT, 41}, {20, SHIFT, 42}, {21, SHIFT, 43}, {47, SHIFT, 73}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 48}, {9, SHIFT, 9}, {10, SHIFT, 10}, {11, SHIFT, 11}, {12, SHIFT, 12}, {46, SHIFT, 13}, },
			{{-1, REDUCE, 103}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 51}, {69, SHIFT, 76}, },
			{{-1, ERROR, 52}, {45, SHIFT, 77}, },
			{{-1, REDUCE, 10}, {48, SHIFT, 78}, },
			{{-1, REDUCE, 96}, },
			{{-1, ERROR, 55}, {46, SHIFT, 79}, },
			{{-1, ERROR, 56}, {27, SHIFT, 80}, {28, SHIFT, 81}, {51, SHIFT, 82}, {58, SHIFT, 83}, {59, SHIFT, 84}, {60, SHIFT, 85}, {61, SHIFT, 86}, {62, SHIFT, 87}, {63, SHIFT, 88}, {64, SHIFT, 89}, {65, SHIFT, 90}, {66, SHIFT, 91}, {67, SHIFT, 92}, },
			{{-1, REDUCE, 107}, },
			{{-1, ERROR, 58}, {67, SHIFT, 94}, },
			{{-1, ERROR, 59}, {67, SHIFT, 95}, },
			{{-1, ERROR, 60}, {67, SHIFT, 96}, },
			{{-1, REDUCE, 97}, },
			{{-1, REDUCE, 98}, },
			{{-1, REDUCE, 99}, },
			{{-1, ERROR, 64}, {67, SHIFT, 97}, },
			{{-1, ERROR, 65}, {50, SHIFT, 98}, },
			{{-1, ERROR, 66}, {2, SHIFT, 99}, },
			{{-1, ERROR, 67}, {67, SHIFT, 100}, },
			{{-1, REDUCE, 35}, {53, SHIFT, 101}, },
			{{-1, ERROR, 69}, {2, SHIFT, 102}, },
			{{-1, REDUCE, 43}, {48, SHIFT, 103}, },
			{{-1, ERROR, 71}, {50, SHIFT, 104}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 109}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 6}, {5, SHIFT, 105}, },
			{{-1, ERROR, 77}, {69, SHIFT, 108}, },
			{{-1, ERROR, 78}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, ERROR, 79}, {27, SHIFT, 80}, {28, SHIFT, 81}, {51, SHIFT, 82}, {58, SHIFT, 83}, {59, SHIFT, 84}, {60, SHIFT, 85}, {61, SHIFT, 86}, {62, SHIFT, 87}, {63, SHIFT, 88}, {64, SHIFT, 89}, {65, SHIFT, 90}, {66, SHIFT, 91}, {67, SHIFT, 92}, },
			{{-1, REDUCE, 71}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 73}, {48, SHIFT, 111}, },
			{{-1, ERROR, 82}, {67, SHIFT, 114}, },
			{{-1, REDUCE, 91}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 93}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 75}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 83}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 87}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 81}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 77}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 79}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 69}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 85}, {48, SHIFT, 111}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 94}, {18, SHIFT, 125}, },
			{{-1, ERROR, 95}, {4, SHIFT, 126}, },
			{{-1, ERROR, 96}, {2, SHIFT, 127}, },
			{{-1, ERROR, 97}, {13, SHIFT, 39}, {14, SHIFT, 40}, {16, SHIFT, 41}, {20, SHIFT, 42}, {21, SHIFT, 43}, {46, SHIFT, 13}, },
			{{-1, ERROR, 98}, {24, SHIFT, 130}, },
			{{-1, ERROR, 99}, {67, SHIFT, 131}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 101}, {67, SHIFT, 132}, },
			{{-1, ERROR, 102}, {67, SHIFT, 133}, },
			{{-1, ERROR, 103}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, ERROR, 104}, {19, SHIFT, 135}, },
			{{-1, ERROR, 105}, {57, SHIFT, 136}, },
			{{-1, REDUCE, 104}, },
			{{-1, REDUCE, 8}, {5, SHIFT, 105}, },
			{{-1, REDUCE, 7}, {5, SHIFT, 105}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 110}, {47, SHIFT, 140}, },
			{{-1, ERROR, 111}, {27, SHIFT, 80}, {28, SHIFT, 81}, {51, SHIFT, 82}, {58, SHIFT, 83}, {59, SHIFT, 84}, {60, SHIFT, 85}, {61, SHIFT, 86}, {62, SHIFT, 87}, {63, SHIFT, 88}, {64, SHIFT, 89}, {65, SHIFT, 90}, {66, SHIFT, 91}, {67, SHIFT, 92}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 114}, {52, SHIFT, 142}, },
			{{-1, REDUCE, 92}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 76}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 125}, {53, SHIFT, 143}, },
			{{-1, ERROR, 126}, {67, SHIFT, 145}, },
			{{-1, ERROR, 127}, {67, SHIFT, 146}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 130}, {33, SHIFT, 61}, {34, SHIFT, 62}, {35, SHIFT, 63}, },
			{{-1, REDUCE, 37}, },
			{{-1, ERROR, 132}, {54, SHIFT, 148}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 135}, {18, SHIFT, 149}, },
			{{-1, REDUCE, 13}, {48, SHIFT, 150}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 105}, },
			{{-1, REDUCE, 9}, {5, SHIFT, 105}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 95}, },
			{{-1, REDUCE, 89}, {48, SHIFT, 111}, },
			{{-1, ERROR, 143}, {6, SHIFT, 152}, {44, SHIFT, 153}, {46, SHIFT, 154}, {67, SHIFT, 155}, },
			{{-1, ERROR, 144}, {13, SHIFT, 39}, {14, SHIFT, 40}, {16, SHIFT, 41}, {20, SHIFT, 42}, {21, SHIFT, 43}, {46, SHIFT, 13}, },
			{{-1, ERROR, 145}, {13, SHIFT, 39}, {14, SHIFT, 40}, {16, SHIFT, 41}, {20, SHIFT, 42}, {21, SHIFT, 43}, {46, SHIFT, 13}, },
			{{-1, ERROR, 146}, {13, SHIFT, 39}, {14, SHIFT, 40}, {16, SHIFT, 41}, {20, SHIFT, 42}, {21, SHIFT, 43}, {46, SHIFT, 13}, },
			{{-1, ERROR, 147}, {1, SHIFT, 166}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 149}, {53, SHIFT, 143}, },
			{{-1, ERROR, 150}, {57, SHIFT, 136}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 152}, {54, SHIFT, 169}, },
			{{-1, ERROR, 153}, {7, SHIFT, 170}, },
			{{-1, ERROR, 154}, {67, SHIFT, 155}, },
			{{-1, REDUCE, 54}, {44, SHIFT, 173}, },
			{{-1, REDUCE, 110}, },
			{{-1, ERROR, 157}, {55, SHIFT, 174}, },
			{{-1, REDUCE, 50}, {56, SHIFT, 175}, },
			{{-1, ERROR, 159}, {6, SHIFT, 176}, {44, SHIFT, 153}, {46, SHIFT, 154}, {67, SHIFT, 155}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 166}, {30, SHIFT, 19}, {31, SHIFT, 20}, {32, SHIFT, 21}, {35, SHIFT, 22}, {36, SHIFT, 23}, {37, SHIFT, 24}, {38, SHIFT, 25}, {39, SHIFT, 26}, {40, SHIFT, 27}, {41, SHIFT, 28}, {43, SHIFT, 29}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 170}, {67, SHIFT, 155}, },
			{{-1, ERROR, 171}, {47, SHIFT, 180}, },
			{{-1, REDUCE, 52}, {48, SHIFT, 181}, },
			{{-1, ERROR, 173}, {67, SHIFT, 182}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 175}, {67, SHIFT, 155}, },
			{{-1, ERROR, 176}, {54, SHIFT, 185}, },
			{{-1, REDUCE, 111}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 179}, {45, SHIFT, 186}, },
			{{-1, ERROR, 180}, {55, SHIFT, 187}, },
			{{-1, ERROR, 181}, {67, SHIFT, 155}, },
			{{-1, REDUCE, 56}, {48, SHIFT, 189}, },
			{{-1, ERROR, 183}, {45, SHIFT, 190}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 46}, },
			{{-1, ERROR, 186}, {55, SHIFT, 191}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 189}, {67, SHIFT, 182}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 57}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 3}, },
			{{-1, 4}, },
			{{-1, 52}, {78, 109}, },
			{{-1, 106}, {107, 138}, {139, 138}, },
			{{-1, 137}, {150, 168}, },
			{{-1, 7}, {8, 32}, {16, 32}, },
			{{-1, 14}, {17, 49}, {48, 49}, },
			{{-1, 33}, {35, 57}, {36, 57}, {37, 57}, {38, 57}, },
			{{-1, 15}, {16, 47}, {17, 50}, {48, 75}, {97, 128}, {144, 160}, {145, 162}, {146, 164}, },
			{{-1, 45}, {46, 74}, {97, 129}, {144, 161}, {145, 163}, {146, 165}, },
			{{-1, 69}, {103, 134}, },
			{{-1, 144}, {149, 167}, },
			{{-1, 156}, {159, 177}, },
			{{-1, 157}, {175, 184}, },
			{{-1, 171}, {181, 188}, },
			{{-1, 158}, {154, 172}, {170, 179}, {181, 172}, },
			{{-1, 183}, {189, 192}, },
			{{-1, 34}, {6, 30}, {18, 30}, {41, 70}, {78, 30}, {103, 70}, {166, 178}, },
			{{-1, 93}, {79, 110}, {111, 141}, },
			{{-1, 112}, {81, 113}, {83, 115}, {84, 116}, {85, 117}, {86, 118}, {87, 119}, {88, 120}, {89, 121}, {90, 122}, {91, 123}, {92, 124}, {142, 151}, },
			{{-1, 53}, {6, 31}, },
			{{-1, 64}, {130, 147}, },
			{{-1, 8}, {4, 16}, },
			{{-1, 17}, {16, 48}, },
			{{-1, 107}, {108, 139}, },
			{{-1, 35}, {10, 36}, {11, 37}, {12, 38}, },
			{{-1, 46}, },
			{{-1, 159}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'script', t doc comment",
			"expecting: t script name",
			"expecting: 'group', EOF",
			"expecting: EOF",
			"expecting: 'group', 'period is', 'population is', 'doctors are', 'events are', '{'",
			"expecting: '('",
			"expecting: 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', t hours type",
			"expecting: 'group', 'period is', 'population is', 'doctors are', 'events are', '{', EOF",
			"expecting: 'period is', 'population is', 'doctors are', 'events are', 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', t hours type, '{'",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '}'",
			"expecting: 'period is', 'population is', 'doctors are', 'events are', '{'",
			"expecting: 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', t hours type, ')'",
			"expecting: 'of', 'foreach', 'table', 'print', 'list', 'barchart', '}', ',', ':', t identifier",
			"expecting: t identifier",
			"expecting: '='",
			"expecting: ':'",
			"expecting: t sequence, 'member', 'element', t patient type, t doctor type, 'Diagnosis'",
			"expecting: 'timeline', 'length of', 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', t hours type, t identifier",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '}', EOF",
			"expecting: t doc comment",
			"expecting: ')'",
			"expecting: ')', ','",
			"expecting: ')', ',', '='",
			"expecting: '{'",
			"expecting: t male, t female, '<', '*', t range, t postalcode, t date, t hour, t day, t year, t month, t number, t identifier",
			"expecting: 'by', t identifier",
			"expecting: 'of'",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '}', '['",
			"expecting: 'of', ','",
			"expecting: 'use', 'group', 'period is', 'population is', 'doctors are', 'events are', '{'",
			"expecting: 'period is', 'population is', 'doctors are', 'events are', 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', t hours type, '{', '}', ','",
			"expecting: 'like'",
			"expecting: 'in'",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '{'",
			"expecting: 'count'",
			"expecting: t sequence",
			"expecting: t group file",
			"expecting: '}'",
			"expecting: 'period is', 'population is', 'doctors are', 'events are', 'Id', 'Sex', 'Birthyear', 'Diagnosis', 'PostalCode', 'Years', 'Months', 'Days', 'Dates', 'Events', t hours type, '{', '}'",
			"expecting: '>'",
			"expecting: '['",
			"expecting: t patient type, t doctor type, 'Diagnosis'",
			"expecting: ']'",
			"expecting: 'use', 'group', 'period is', 'population is', 'doctors are', 'events are', '{', ','",
			"expecting: 'end', '(', '{', t identifier",
			"expecting: 'by'",
			"expecting: 'not'",
			"expecting: '(', ')', '}', ',', '->', '|'",
			"expecting: '->'",
			"expecting: '->', '|'",
			"expecting: 'foreach', 'table', 'print', 'list', 'barchart', '{', '}'",
			"expecting: '}', ','",
			"expecting: ')', '}', ',', '->', '|'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 6, 7, 2, 8, 8, 8, 8, 9, 10, 3, 4, 10, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 14, 7, 8, 15, 8, 8, 8, 8, 16, 13, 17, 13, 13, 18, 9, 9, 3, 10, 10, 3, 19, 20, 21, 22, 23, 24, 8, 13, 13, 13, 25, 25, 25, 13, 14, 26, 13, 27, 26, 28, 14, 9, 18, 9, 3, 29, 19, 6, 24, 30, 30, 13, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 8, 31, 32, 26, 33, 34, 13, 9, 13, 13, 6, 35, 36, 29, 29, 29, 20, 37, 24, 38, 38, 39, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 40, 13, 13, 9, 9, 41, 9, 42, 9, 26, 31, 43, 29, 29, 29, 7, 38, 30, 44, 33, 33, 33, 45, 9, 40, 36, 38, 42, 46, 13, 47, 44, 48, 49, 44, 9, 9, 9, 9, 9, 9, 6, 9, 29, 50, 13, 37, 51, 13, 44, 13, 42, 44, 9, 20, 48, 13, 21, 20, 48, 50, 48, 44, 37, 13, 52, 44, 20, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
