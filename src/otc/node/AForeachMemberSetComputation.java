/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.node;

import otc.analysis.*;

@SuppressWarnings("nls")
public final class AForeachMemberSetComputation extends PComputation
{
    private TTIdentifier _name_;
    private TTIdentifier _sequencename_;
    private PComputationList _computationList_;

    public AForeachMemberSetComputation()
    {
        // Constructor
    }

    public AForeachMemberSetComputation(
        @SuppressWarnings("hiding") TTIdentifier _name_,
        @SuppressWarnings("hiding") TTIdentifier _sequencename_,
        @SuppressWarnings("hiding") PComputationList _computationList_)
    {
        // Constructor
        setName(_name_);

        setSequencename(_sequencename_);

        setComputationList(_computationList_);

    }

    @Override
    public Object clone()
    {
        return new AForeachMemberSetComputation(
            cloneNode(this._name_),
            cloneNode(this._sequencename_),
            cloneNode(this._computationList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAForeachMemberSetComputation(this);
    }

    public TTIdentifier getName()
    {
        return this._name_;
    }

    public void setName(TTIdentifier node)
    {
        if(this._name_ != null)
        {
            this._name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._name_ = node;
    }

    public TTIdentifier getSequencename()
    {
        return this._sequencename_;
    }

    public void setSequencename(TTIdentifier node)
    {
        if(this._sequencename_ != null)
        {
            this._sequencename_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sequencename_ = node;
    }

    public PComputationList getComputationList()
    {
        return this._computationList_;
    }

    public void setComputationList(PComputationList node)
    {
        if(this._computationList_ != null)
        {
            this._computationList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._computationList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._name_)
            + toString(this._sequencename_)
            + toString(this._computationList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._name_ == child)
        {
            this._name_ = null;
            return;
        }

        if(this._sequencename_ == child)
        {
            this._sequencename_ = null;
            return;
        }

        if(this._computationList_ == child)
        {
            this._computationList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._name_ == oldChild)
        {
            setName((TTIdentifier) newChild);
            return;
        }

        if(this._sequencename_ == oldChild)
        {
            setSequencename((TTIdentifier) newChild);
            return;
        }

        if(this._computationList_ == oldChild)
        {
            setComputationList((PComputationList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
