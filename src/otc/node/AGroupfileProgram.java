/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.node;

import java.util.*;
import otc.analysis.*;

@SuppressWarnings("nls")
public final class AGroupfileProgram extends PProgram
{
    private TTDocComment _tDocComment_;
    private final LinkedList<PGroupDefinitions> _groupDefinitions_ = new LinkedList<PGroupDefinitions>();

    public AGroupfileProgram()
    {
        // Constructor
    }

    public AGroupfileProgram(
        @SuppressWarnings("hiding") TTDocComment _tDocComment_,
        @SuppressWarnings("hiding") List<PGroupDefinitions> _groupDefinitions_)
    {
        // Constructor
        setTDocComment(_tDocComment_);

        setGroupDefinitions(_groupDefinitions_);

    }

    @Override
    public Object clone()
    {
        return new AGroupfileProgram(
            cloneNode(this._tDocComment_),
            cloneList(this._groupDefinitions_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGroupfileProgram(this);
    }

    public TTDocComment getTDocComment()
    {
        return this._tDocComment_;
    }

    public void setTDocComment(TTDocComment node)
    {
        if(this._tDocComment_ != null)
        {
            this._tDocComment_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tDocComment_ = node;
    }

    public LinkedList<PGroupDefinitions> getGroupDefinitions()
    {
        return this._groupDefinitions_;
    }

    public void setGroupDefinitions(List<PGroupDefinitions> list)
    {
        this._groupDefinitions_.clear();
        this._groupDefinitions_.addAll(list);
        for(PGroupDefinitions e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tDocComment_)
            + toString(this._groupDefinitions_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tDocComment_ == child)
        {
            this._tDocComment_ = null;
            return;
        }

        if(this._groupDefinitions_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tDocComment_ == oldChild)
        {
            setTDocComment((TTDocComment) newChild);
            return;
        }

        for(ListIterator<PGroupDefinitions> i = this._groupDefinitions_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PGroupDefinitions) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
