/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.node;

import otc.analysis.*;

@SuppressWarnings("nls")
public final class AForeachSequenceSetComputation extends PComputation
{
    private TTIdentifier _tIdentifier_;
    private PSequence _sequence_;
    private PComputationList _computationList_;

    public AForeachSequenceSetComputation()
    {
        // Constructor
    }

    public AForeachSequenceSetComputation(
        @SuppressWarnings("hiding") TTIdentifier _tIdentifier_,
        @SuppressWarnings("hiding") PSequence _sequence_,
        @SuppressWarnings("hiding") PComputationList _computationList_)
    {
        // Constructor
        setTIdentifier(_tIdentifier_);

        setSequence(_sequence_);

        setComputationList(_computationList_);

    }

    @Override
    public Object clone()
    {
        return new AForeachSequenceSetComputation(
            cloneNode(this._tIdentifier_),
            cloneNode(this._sequence_),
            cloneNode(this._computationList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAForeachSequenceSetComputation(this);
    }

    public TTIdentifier getTIdentifier()
    {
        return this._tIdentifier_;
    }

    public void setTIdentifier(TTIdentifier node)
    {
        if(this._tIdentifier_ != null)
        {
            this._tIdentifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tIdentifier_ = node;
    }

    public PSequence getSequence()
    {
        return this._sequence_;
    }

    public void setSequence(PSequence node)
    {
        if(this._sequence_ != null)
        {
            this._sequence_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sequence_ = node;
    }

    public PComputationList getComputationList()
    {
        return this._computationList_;
    }

    public void setComputationList(PComputationList node)
    {
        if(this._computationList_ != null)
        {
            this._computationList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._computationList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tIdentifier_)
            + toString(this._sequence_)
            + toString(this._computationList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tIdentifier_ == child)
        {
            this._tIdentifier_ = null;
            return;
        }

        if(this._sequence_ == child)
        {
            this._sequence_ = null;
            return;
        }

        if(this._computationList_ == child)
        {
            this._computationList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tIdentifier_ == oldChild)
        {
            setTIdentifier((TTIdentifier) newChild);
            return;
        }

        if(this._sequence_ == oldChild)
        {
            setSequence((PSequence) newChild);
            return;
        }

        if(this._computationList_ == oldChild)
        {
            setComputationList((PComputationList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
