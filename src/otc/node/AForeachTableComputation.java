/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.node;

import otc.analysis.*;

@SuppressWarnings("nls")
public final class AForeachTableComputation extends PComputation
{
    private TTIdentifier _iterator_;
    private TTIdentifier _variable_;
    private PComputation _computation_;

    public AForeachTableComputation()
    {
        // Constructor
    }

    public AForeachTableComputation(
        @SuppressWarnings("hiding") TTIdentifier _iterator_,
        @SuppressWarnings("hiding") TTIdentifier _variable_,
        @SuppressWarnings("hiding") PComputation _computation_)
    {
        // Constructor
        setIterator(_iterator_);

        setVariable(_variable_);

        setComputation(_computation_);

    }

    @Override
    public Object clone()
    {
        return new AForeachTableComputation(
            cloneNode(this._iterator_),
            cloneNode(this._variable_),
            cloneNode(this._computation_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAForeachTableComputation(this);
    }

    public TTIdentifier getIterator()
    {
        return this._iterator_;
    }

    public void setIterator(TTIdentifier node)
    {
        if(this._iterator_ != null)
        {
            this._iterator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._iterator_ = node;
    }

    public TTIdentifier getVariable()
    {
        return this._variable_;
    }

    public void setVariable(TTIdentifier node)
    {
        if(this._variable_ != null)
        {
            this._variable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variable_ = node;
    }

    public PComputation getComputation()
    {
        return this._computation_;
    }

    public void setComputation(PComputation node)
    {
        if(this._computation_ != null)
        {
            this._computation_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._computation_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._iterator_)
            + toString(this._variable_)
            + toString(this._computation_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._iterator_ == child)
        {
            this._iterator_ = null;
            return;
        }

        if(this._variable_ == child)
        {
            this._variable_ = null;
            return;
        }

        if(this._computation_ == child)
        {
            this._computation_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._iterator_ == oldChild)
        {
            setIterator((TTIdentifier) newChild);
            return;
        }

        if(this._variable_ == oldChild)
        {
            setVariable((TTIdentifier) newChild);
            return;
        }

        if(this._computation_ == oldChild)
        {
            setComputation((PComputation) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
