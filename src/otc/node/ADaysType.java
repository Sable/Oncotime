/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.node;

import otc.analysis.*;

@SuppressWarnings("nls")
public final class ADaysType extends PType
{
    private TTDaysType _tDaysType_;

    public ADaysType()
    {
        // Constructor
    }

    public ADaysType(
        @SuppressWarnings("hiding") TTDaysType _tDaysType_)
    {
        // Constructor
        setTDaysType(_tDaysType_);

    }

    @Override
    public Object clone()
    {
        return new ADaysType(
            cloneNode(this._tDaysType_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADaysType(this);
    }

    public TTDaysType getTDaysType()
    {
        return this._tDaysType_;
    }

    public void setTDaysType(TTDaysType node)
    {
        if(this._tDaysType_ != null)
        {
            this._tDaysType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tDaysType_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tDaysType_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tDaysType_ == child)
        {
            this._tDaysType_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tDaysType_ == oldChild)
        {
            setTDaysType((TTDaysType) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
