/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.node;

import java.util.*;
import otc.analysis.*;

@SuppressWarnings("nls")
public final class AHeader extends PHeader
{
    private TTScript _tScript_;
    private TTScriptName _tScriptName_;
    private TLParen _lParen_;
    private PParameters _parameters_;
    private TRParen _rParen_;
    private TTDocComment _tDocComment_;
    private final LinkedList<PDependencies> _dependencies_ = new LinkedList<PDependencies>();

    public AHeader()
    {
        // Constructor
    }

    public AHeader(
        @SuppressWarnings("hiding") TTScript _tScript_,
        @SuppressWarnings("hiding") TTScriptName _tScriptName_,
        @SuppressWarnings("hiding") TLParen _lParen_,
        @SuppressWarnings("hiding") PParameters _parameters_,
        @SuppressWarnings("hiding") TRParen _rParen_,
        @SuppressWarnings("hiding") TTDocComment _tDocComment_,
        @SuppressWarnings("hiding") List<PDependencies> _dependencies_)
    {
        // Constructor
        setTScript(_tScript_);

        setTScriptName(_tScriptName_);

        setLParen(_lParen_);

        setParameters(_parameters_);

        setRParen(_rParen_);

        setTDocComment(_tDocComment_);

        setDependencies(_dependencies_);

    }

    @Override
    public Object clone()
    {
        return new AHeader(
            cloneNode(this._tScript_),
            cloneNode(this._tScriptName_),
            cloneNode(this._lParen_),
            cloneNode(this._parameters_),
            cloneNode(this._rParen_),
            cloneNode(this._tDocComment_),
            cloneList(this._dependencies_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAHeader(this);
    }

    public TTScript getTScript()
    {
        return this._tScript_;
    }

    public void setTScript(TTScript node)
    {
        if(this._tScript_ != null)
        {
            this._tScript_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tScript_ = node;
    }

    public TTScriptName getTScriptName()
    {
        return this._tScriptName_;
    }

    public void setTScriptName(TTScriptName node)
    {
        if(this._tScriptName_ != null)
        {
            this._tScriptName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tScriptName_ = node;
    }

    public TLParen getLParen()
    {
        return this._lParen_;
    }

    public void setLParen(TLParen node)
    {
        if(this._lParen_ != null)
        {
            this._lParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lParen_ = node;
    }

    public PParameters getParameters()
    {
        return this._parameters_;
    }

    public void setParameters(PParameters node)
    {
        if(this._parameters_ != null)
        {
            this._parameters_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parameters_ = node;
    }

    public TRParen getRParen()
    {
        return this._rParen_;
    }

    public void setRParen(TRParen node)
    {
        if(this._rParen_ != null)
        {
            this._rParen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rParen_ = node;
    }

    public TTDocComment getTDocComment()
    {
        return this._tDocComment_;
    }

    public void setTDocComment(TTDocComment node)
    {
        if(this._tDocComment_ != null)
        {
            this._tDocComment_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tDocComment_ = node;
    }

    public LinkedList<PDependencies> getDependencies()
    {
        return this._dependencies_;
    }

    public void setDependencies(List<PDependencies> list)
    {
        this._dependencies_.clear();
        this._dependencies_.addAll(list);
        for(PDependencies e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tScript_)
            + toString(this._tScriptName_)
            + toString(this._lParen_)
            + toString(this._parameters_)
            + toString(this._rParen_)
            + toString(this._tDocComment_)
            + toString(this._dependencies_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tScript_ == child)
        {
            this._tScript_ = null;
            return;
        }

        if(this._tScriptName_ == child)
        {
            this._tScriptName_ = null;
            return;
        }

        if(this._lParen_ == child)
        {
            this._lParen_ = null;
            return;
        }

        if(this._parameters_ == child)
        {
            this._parameters_ = null;
            return;
        }

        if(this._rParen_ == child)
        {
            this._rParen_ = null;
            return;
        }

        if(this._tDocComment_ == child)
        {
            this._tDocComment_ = null;
            return;
        }

        if(this._dependencies_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tScript_ == oldChild)
        {
            setTScript((TTScript) newChild);
            return;
        }

        if(this._tScriptName_ == oldChild)
        {
            setTScriptName((TTScriptName) newChild);
            return;
        }

        if(this._lParen_ == oldChild)
        {
            setLParen((TLParen) newChild);
            return;
        }

        if(this._parameters_ == oldChild)
        {
            setParameters((PParameters) newChild);
            return;
        }

        if(this._rParen_ == oldChild)
        {
            setRParen((TRParen) newChild);
            return;
        }

        if(this._tDocComment_ == oldChild)
        {
            setTDocComment((TTDocComment) newChild);
            return;
        }

        for(ListIterator<PDependencies> i = this._dependencies_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PDependencies) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
