/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.node;

import otc.analysis.*;

@SuppressWarnings("nls")
public final class ADiagnosisType extends PType
{
    private TTDiagnosisType _tDiagnosisType_;

    public ADiagnosisType()
    {
        // Constructor
    }

    public ADiagnosisType(
        @SuppressWarnings("hiding") TTDiagnosisType _tDiagnosisType_)
    {
        // Constructor
        setTDiagnosisType(_tDiagnosisType_);

    }

    @Override
    public Object clone()
    {
        return new ADiagnosisType(
            cloneNode(this._tDiagnosisType_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADiagnosisType(this);
    }

    public TTDiagnosisType getTDiagnosisType()
    {
        return this._tDiagnosisType_;
    }

    public void setTDiagnosisType(TTDiagnosisType node)
    {
        if(this._tDiagnosisType_ != null)
        {
            this._tDiagnosisType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tDiagnosisType_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tDiagnosisType_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tDiagnosisType_ == child)
        {
            this._tDiagnosisType_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tDiagnosisType_ == oldChild)
        {
            setTDiagnosisType((TTDiagnosisType) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
