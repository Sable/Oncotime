/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.lexer;

import java.io.*;
import otc.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 65:
                        {
                            @SuppressWarnings("hiding") Token token = new65(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 66:
                        {
                            @SuppressWarnings("hiding") Token token = new66(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 67:
                        {
                            @SuppressWarnings("hiding") Token token = new67(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 68:
                        {
                            @SuppressWarnings("hiding") Token token = new68(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 69:
                        {
                            @SuppressWarnings("hiding") Token token = new69(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 70:
                        {
                            @SuppressWarnings("hiding") Token token = new70(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 71:
                        {
                            @SuppressWarnings("hiding") Token token = new71(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTScript(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTBy(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTOf(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTTo(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTIn(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTUse(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTEnd(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTNot(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTGroup(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPeriod(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPopulation(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDoctorFilter(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTEvents(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTForeach(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTTable(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTWhere(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPrint(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTNative(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTLike(line, pos); }
    Token new19(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTSequence(text, line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTList(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTBarchart(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTSize(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTMember(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTCount(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTTimeline(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTLengthof(line, pos); }
    Token new27(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTMale(text, line, pos); }
    Token new28(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTFemale(text, line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTElement(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTIdType(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTSexType(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTBirthyearType(line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPatientType(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDoctorType(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDiagnosisType(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPostalcodeType(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTYearsType(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTMonthsType(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDaysType(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDateType(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTEventType(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTSequenceType(line, pos); }
    Token new43(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTHoursType(text, line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParen(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParen(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrace(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrace(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEquals(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLAngle(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRAngle(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLSquare(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRSquare(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRArrow(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPipe(line, pos); }
    Token new57(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTGroupFile(text, line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTStar(line, pos); }
    Token new59(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTRange(text, line, pos); }
    Token new60(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPostalcode(text, line, pos); }
    Token new61(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDate(text, line, pos); }
    Token new62(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTHour(text, line, pos); }
    Token new63(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDay(text, line, pos); }
    Token new64(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTYear(text, line, pos); }
    Token new65(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTMonth(text, line, pos); }
    Token new66(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTNumber(text, line, pos); }
    Token new67(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTIdentifier(text, line, pos); }
    Token new68(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTScriptName(text, line, pos); }
    Token new69(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDocComment(text, line, pos); }
    Token new70(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEmptySpace(text, line, pos); }
    Token new71(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLineComment(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {40, 40, 5}, {41, 41, 6}, {42, 42, 7}, {44, 44, 8}, {45, 45, 9}, {47, 47, 10}, {48, 57, 11}, {58, 58, 12}, {60, 60, 13}, {61, 61, 14}, {62, 62, 15}, {65, 65, 16}, {66, 66, 17}, {67, 67, 16}, {68, 68, 18}, {69, 69, 19}, {70, 70, 20}, {71, 71, 16}, {72, 72, 21}, {73, 73, 22}, {74, 76, 16}, {77, 77, 23}, {78, 79, 16}, {80, 80, 24}, {81, 82, 16}, {83, 83, 25}, {84, 84, 26}, {85, 86, 16}, {87, 87, 27}, {88, 88, 16}, {89, 89, 28}, {90, 90, 16}, {91, 91, 29}, {93, 93, 30}, {97, 97, 31}, {98, 98, 32}, {99, 99, 33}, {100, 100, 34}, {101, 101, 35}, {102, 102, 36}, {103, 103, 37}, {104, 104, 31}, {105, 105, 38}, {106, 107, 31}, {108, 108, 39}, {109, 109, 40}, {110, 110, 41}, {111, 111, 42}, {112, 112, 43}, {113, 114, 31}, {115, 115, 44}, {116, 116, 45}, {117, 117, 46}, {118, 118, 31}, {119, 119, 47}, {120, 122, 31}, {123, 123, 48}, {124, 124, 49}, {125, 125, 50}, },
            {},
            {},
            {},
            {{116, 116, 51}, },
            {},
            {},
            {},
            {},
            {{62, 62, 52}, },
            {{42, 42, 53}, {47, 47, 54}, },
            {{32, 32, 55}, {48, 57, 56}, },
            {},
            {},
            {},
            {},
            {{46, 46, 57}, {48, 57, 58}, {65, 90, 59}, {95, 95, 60}, {97, 122, 59}, },
            {{46, 95, -18}, {97, 104, 59}, {105, 105, 61}, {106, 122, 59}, },
            {{46, 95, -18}, {97, 97, 62}, {98, 104, 59}, {105, 105, 63}, {106, 110, 59}, {111, 111, 64}, {112, 122, 59}, },
            {{46, 95, -18}, {97, 117, 59}, {118, 118, 65}, {119, 122, 59}, },
            {{46, 95, -18}, {97, 100, 59}, {101, 101, 66}, {102, 113, 59}, {114, 114, 67}, {115, 122, 59}, },
            {{46, 95, -18}, {97, 110, 59}, {111, 111, 68}, {112, 122, 59}, },
            {{46, 95, -18}, {97, 99, 59}, {100, 100, 69}, {101, 122, 59}, },
            {{46, 95, -18}, {97, 97, 70}, {98, 110, 59}, {111, 111, 71}, {112, 122, 59}, },
            {{46, 95, -18}, {97, 97, 72}, {98, 110, 59}, {111, 111, 73}, {112, 122, 59}, },
            {{46, 95, -18}, {97, 97, 74}, {98, 100, 59}, {101, 101, 75}, {102, 116, 59}, {117, 117, 76}, {118, 122, 59}, },
            {{46, 95, -18}, {97, 103, 59}, {104, 104, 77}, {105, 116, 59}, {117, 117, 78}, {118, 122, 59}, },
            {{46, 100, -22}, {101, 101, 79}, {102, 122, 59}, },
            {{46, 100, -22}, {101, 101, 80}, {102, 122, 59}, },
            {},
            {},
            {{46, 46, 57}, {48, 57, 81}, {65, 90, 82}, {95, 95, 83}, {97, 122, 82}, },
            {{46, 95, -33}, {97, 97, 84}, {98, 120, 82}, {121, 121, 85}, {122, 122, 82}, },
            {{46, 95, -33}, {97, 110, 82}, {111, 111, 86}, {112, 122, 82}, },
            {{46, 110, -35}, {111, 111, 87}, {112, 122, 82}, },
            {{46, 95, -33}, {97, 107, 82}, {108, 108, 88}, {109, 109, 82}, {110, 110, 89}, {111, 117, 82}, {118, 118, 90}, {119, 122, 82}, },
            {{46, 95, -33}, {97, 100, 82}, {101, 101, 91}, {102, 110, 82}, {111, 111, 92}, {112, 122, 82}, },
            {{46, 95, -33}, {97, 113, 82}, {114, 114, 93}, {115, 122, 82}, },
            {{46, 95, -33}, {97, 109, 82}, {110, 110, 94}, {111, 122, 82}, },
            {{46, 100, -38}, {101, 101, 95}, {102, 104, 82}, {105, 105, 96}, {106, 122, 82}, },
            {{46, 95, -33}, {97, 97, 97}, {98, 100, 82}, {101, 101, 98}, {102, 122, 82}, },
            {{46, 95, -33}, {97, 97, 99}, {98, 110, 82}, {111, 111, 100}, {112, 122, 82}, },
            {{46, 95, -33}, {97, 101, 82}, {102, 102, 101}, {103, 122, 82}, },
            {{46, 100, -38}, {101, 101, 102}, {102, 110, 82}, {111, 111, 103}, {112, 113, 82}, {114, 114, 104}, {115, 122, 82}, },
            {{46, 95, -33}, {97, 98, 82}, {99, 99, 105}, {100, 100, 82}, {101, 101, 106}, {102, 104, 82}, {105, 105, 107}, {106, 122, 82}, },
            {{46, 95, -33}, {97, 97, 108}, {98, 104, 82}, {105, 105, 109}, {106, 110, 82}, {111, 111, 110}, {112, 122, 82}, },
            {{46, 95, -33}, {97, 114, 82}, {115, 115, 111}, {116, 122, 82}, },
            {{46, 95, -33}, {97, 103, 82}, {104, 104, 112}, {105, 122, 82}, },
            {},
            {},
            {},
            {{111, 111, 113}, },
            {},
            {{0, 41, 114}, {42, 42, 115}, {43, 127, 114}, },
            {{0, 9, 116}, {10, 10, 117}, {11, 12, 116}, {13, 13, 118}, {14, 127, 116}, },
            {{116, 116, 51}, },
            {{32, 32, 55}, {48, 57, 119}, {58, 58, 120}, },
            {{103, 103, 121}, },
            {{46, 46, 57}, {48, 57, 122}, {65, 90, 123}, {95, 122, -18}, },
            {{46, 57, -60}, {65, 122, -18}, },
            {{46, 122, -61}, },
            {{46, 95, -61}, {97, 113, 59}, {114, 114, 124}, {115, 122, 59}, },
            {{46, 95, -61}, {97, 115, 59}, {116, 116, 125}, {117, 120, 59}, {121, 121, 126}, {122, 122, 59}, },
            {{46, 95, -61}, {97, 97, 127}, {98, 122, 59}, },
            {{46, 95, -61}, {97, 98, 59}, {99, 99, 128}, {100, 122, 59}, },
            {{46, 95, -61}, {97, 100, 59}, {101, 101, 129}, {102, 122, 59}, },
            {{46, 95, -61}, {97, 108, 59}, {109, 109, 130}, {110, 122, 59}, },
            {{46, 95, -61}, {97, 104, 59}, {105, 105, 131}, {106, 122, 59}, },
            {{46, 95, -61}, {97, 116, 59}, {117, 117, 132}, {118, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 95, -61}, {97, 107, 59}, {108, 108, 133}, {109, 122, 59}, },
            {{46, 95, -61}, {97, 109, 59}, {110, 110, 134}, {111, 122, 59}, },
            {{46, 115, -64}, {116, 116, 135}, {117, 122, 59}, },
            {{46, 95, -61}, {97, 114, 59}, {115, 115, 136}, {116, 122, 59}, },
            {{46, 115, -64}, {116, 116, 137}, {117, 122, 59}, },
            {{46, 95, -61}, {97, 112, 59}, {113, 113, 138}, {114, 119, 59}, {120, 120, 139}, {121, 122, 59}, },
            {{46, 109, -73}, {110, 110, 140}, {111, 122, 59}, },
            {{46, 116, -70}, {117, 117, 141}, {118, 122, 59}, },
            {{46, 100, -67}, {101, 101, 142}, {102, 122, 59}, },
            {{46, 95, -61}, {97, 99, 59}, {100, 100, 143}, {101, 122, 59}, },
            {{46, 95, -61}, {97, 97, 144}, {98, 122, 59}, },
            {{46, 122, -33}, },
            {{46, 122, -33}, },
            {{46, 122, -33}, },
            {{46, 113, -39}, {114, 114, 145}, {115, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 95, -33}, {97, 116, 82}, {117, 117, 146}, {118, 122, 82}, },
            {{46, 98, -46}, {99, 99, 147}, {100, 122, 82}, },
            {{46, 100, -38}, {101, 101, 148}, {102, 122, 82}, },
            {{46, 95, -33}, {97, 99, 82}, {100, 100, 149}, {101, 122, 82}, },
            {{46, 100, -38}, {101, 101, 150}, {102, 122, 82}, },
            {{46, 95, -33}, {97, 108, 82}, {109, 109, 151}, {110, 122, 82}, },
            {{46, 113, -39}, {114, 114, 152}, {115, 122, 82}, },
            {{46, 110, -35}, {111, 111, 153}, {112, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 109, -40}, {110, 110, 154}, {111, 122, 82}, },
            {{46, 95, -33}, {97, 106, 82}, {107, 107, 155}, {108, 114, 82}, {115, 115, 156}, {116, 122, 82}, },
            {{46, 107, -37}, {108, 108, 157}, {109, 122, 82}, },
            {{46, 108, -93}, {109, 109, 158}, {110, 122, 82}, },
            {{46, 95, -33}, {97, 115, 82}, {116, 116, 159}, {117, 122, 82}, },
            {{46, 115, -101}, {116, 116, 160}, {117, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 113, -39}, {114, 114, 161}, {115, 122, 82}, },
            {{46, 95, -33}, {97, 111, 82}, {112, 112, 162}, {113, 122, 82}, },
            {{46, 95, -33}, {97, 104, 82}, {105, 105, 163}, {106, 122, 82}, },
            {{46, 113, -39}, {114, 114, 164}, {115, 122, 82}, },
            {{46, 95, -33}, {97, 112, 82}, {113, 113, 165}, {114, 122, 82}, },
            {{46, 95, -33}, {97, 121, 82}, {122, 122, 166}, },
            {{46, 95, -33}, {97, 97, 82}, {98, 98, 167}, {99, 122, 82}, },
            {{46, 108, -93}, {109, 109, 168}, {110, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 100, -38}, {101, 101, 169}, {102, 122, 82}, },
            {{46, 100, -38}, {101, 101, 170}, {102, 122, 82}, },
            {{32, 32, 171}, },
            {{0, 127, -55}, },
            {{0, 41, 172}, {42, 42, 115}, {43, 46, 172}, {47, 47, 173}, {48, 127, 172}, },
            {{0, 127, -56}, },
            {{13, 13, 174}, },
            {},
            {{32, 32, 55}, {48, 57, 175}, },
            {{48, 57, 176}, },
            {{114, 114, 177}, },
            {{46, 122, -61}, },
            {{46, 46, 57}, {48, 57, 178}, {65, 122, -18}, },
            {{46, 115, -64}, {116, 116, 179}, {117, 122, 59}, },
            {{46, 100, -67}, {101, 101, 180}, {102, 122, 59}, },
            {{46, 114, -75}, {115, 115, 181}, {116, 122, 59}, },
            {{46, 95, -61}, {97, 102, 59}, {103, 103, 182}, {104, 122, 59}, },
            {{46, 115, -64}, {116, 116, 183}, {117, 122, 59}, },
            {{46, 109, -73}, {110, 110, 184}, {111, 122, 59}, },
            {{46, 95, -61}, {97, 97, 185}, {98, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 113, -63}, {114, 114, 186}, {115, 122, 59}, },
            {{46, 100, -67}, {101, 101, 187}, {102, 122, 59}, },
            {{46, 115, -64}, {116, 116, 188}, {117, 122, 59}, },
            {{46, 104, -69}, {105, 105, 189}, {106, 122, 59}, },
            {{46, 115, -64}, {116, 116, 190}, {117, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 116, -70}, {117, 117, 191}, {118, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 122, -61}, },
            {{46, 113, -63}, {114, 114, 192}, {115, 122, 59}, },
            {{46, 114, -75}, {115, 115, 193}, {116, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 113, -63}, {114, 114, 194}, {115, 122, 59}, },
            {{46, 98, -46}, {99, 99, 195}, {100, 122, 82}, },
            {{46, 109, -40}, {110, 110, 196}, {111, 122, 82}, },
            {{46, 115, -101}, {116, 116, 197}, {117, 122, 82}, },
            {{46, 108, -93}, {109, 109, 198}, {110, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 109, -40}, {110, 110, 199}, {111, 122, 82}, },
            {{46, 95, -33}, {97, 97, 200}, {98, 122, 82}, },
            {{46, 100, -38}, {101, 101, 201}, {102, 122, 82}, },
            {{46, 116, -88}, {117, 117, 202}, {118, 122, 82}, },
            {{46, 95, -33}, {97, 102, 82}, {103, 103, 203}, {104, 122, 82}, },
            {{46, 100, -38}, {101, 101, 204}, {102, 122, 82}, },
            {{46, 115, -101}, {116, 116, 205}, {117, 122, 82}, },
            {{46, 100, -38}, {101, 101, 206}, {102, 122, 82}, },
            {{46, 97, -110}, {98, 98, 207}, {99, 122, 82}, },
            {{46, 104, -106}, {105, 105, 208}, {106, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 104, -106}, {105, 105, 209}, {106, 122, 82}, },
            {{46, 116, -88}, {117, 117, 210}, {118, 122, 82}, },
            {{46, 109, -40}, {110, 110, 211}, {111, 122, 82}, },
            {{46, 104, -106}, {105, 105, 212}, {106, 122, 82}, },
            {{46, 116, -88}, {117, 117, 213}, {118, 122, 82}, },
            {{46, 100, -38}, {101, 101, 214}, {102, 122, 82}, },
            {{46, 107, -37}, {108, 108, 215}, {109, 122, 82}, },
            {{46, 100, -38}, {101, 101, 216}, {102, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 113, -39}, {114, 114, 217}, {115, 122, 82}, },
            {{48, 57, 218}, },
            {{0, 41, 219}, {42, 42, 115}, {43, 127, 219}, },
            {},
            {},
            {{32, 32, 55}, {45, 45, 220}, {48, 57, 221}, },
            {{48, 57, 222}, },
            {{112, 112, 223}, },
            {{46, 57, -60}, {65, 90, 224}, {95, 122, -18}, },
            {{46, 95, -61}, {97, 103, 59}, {104, 104, 225}, {105, 122, 59}, },
            {{46, 114, -75}, {115, 115, 226}, {116, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 109, -73}, {110, 110, 227}, {111, 122, 59}, },
            {{46, 95, -61}, {97, 110, 59}, {111, 111, 228}, {112, 122, 59}, },
            {{46, 115, -64}, {116, 116, 229}, {117, 122, 59}, },
            {{46, 107, -72}, {108, 108, 230}, {109, 122, 59}, },
            {{46, 114, -75}, {115, 115, 231}, {116, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 103, -181}, {104, 104, 232}, {105, 122, 59}, },
            {{46, 100, -67}, {101, 101, 233}, {102, 122, 59}, },
            {{46, 95, -61}, {97, 97, 234}, {98, 122, 59}, },
            {{46, 100, -67}, {101, 101, 235}, {102, 122, 59}, },
            {{46, 114, -75}, {115, 115, 236}, {116, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 114, -75}, {115, 115, 237}, {116, 122, 59}, },
            {{46, 103, -49}, {104, 104, 238}, {105, 122, 82}, },
            {{46, 115, -101}, {116, 116, 239}, {117, 122, 82}, },
            {{46, 110, -35}, {111, 111, 240}, {112, 122, 82}, },
            {{46, 100, -38}, {101, 101, 241}, {102, 122, 82}, },
            {{46, 115, -101}, {116, 116, 242}, {117, 122, 82}, },
            {{46, 107, -37}, {108, 108, 243}, {109, 122, 82}, },
            {{46, 95, -33}, {97, 97, 244}, {98, 122, 82}, },
            {{46, 111, -105}, {112, 112, 245}, {113, 122, 82}, },
            {{46, 115, -101}, {116, 116, 246}, {117, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 122, -33}, },
            {{46, 122, -33}, },
            {{46, 100, -38}, {101, 101, 247}, {102, 122, 82}, },
            {{46, 95, -33}, {97, 117, 82}, {118, 118, 248}, {119, 122, 82}, },
            {{46, 110, -35}, {111, 111, 249}, {112, 122, 82}, },
            {{46, 107, -37}, {108, 108, 250}, {109, 122, 82}, },
            {{46, 115, -101}, {116, 116, 251}, {117, 122, 82}, },
            {{46, 111, -105}, {112, 112, 252}, {113, 122, 82}, },
            {{46, 100, -38}, {101, 101, 253}, {102, 122, 82}, },
            {{32, 32, 254}, {46, 122, -33}, },
            {{46, 100, -38}, {101, 101, 255}, {102, 122, 82}, },
            {{46, 107, -37}, {108, 108, 256}, {109, 122, 82}, },
            {{46, 100, -38}, {101, 101, 257}, {102, 122, 82}, },
            {{48, 57, 258}, },
            {{0, 127, -174}, },
            {{48, 57, 259}, },
            {{32, 32, 55}, {48, 57, 221}, },
            {{32, 32, 55}, },
            {},
            {{46, 46, 57}, {48, 57, 260}, {65, 122, -18}, },
            {{46, 95, -61}, {97, 120, 59}, {121, 121, 261}, {122, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 110, -185}, {111, 111, 262}, {112, 122, 59}, },
            {{46, 113, -63}, {114, 114, 263}, {115, 122, 59}, },
            {{46, 114, -75}, {115, 115, 264}, {116, 122, 59}, },
            {{46, 100, -67}, {101, 101, 265}, {102, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 114, -75}, {115, 115, 266}, {116, 122, 59}, },
            {{46, 109, -73}, {110, 110, 267}, {111, 122, 59}, },
            {{46, 107, -72}, {108, 108, 268}, {109, 122, 59}, },
            {{46, 109, -73}, {110, 110, 269}, {111, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 122, -61}, },
            {{46, 95, -33}, {97, 97, 270}, {98, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 113, -39}, {114, 114, 271}, {115, 122, 82}, },
            {{46, 109, -40}, {110, 110, 272}, {111, 122, 82}, },
            {{46, 114, -48}, {115, 115, 273}, {116, 122, 82}, },
            {{46, 100, -38}, {101, 101, 274}, {102, 122, 82}, },
            {{46, 98, -46}, {99, 99, 275}, {100, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 103, -49}, {104, 104, 276}, {105, 122, 82}, },
            {{46, 113, -39}, {114, 114, 277}, {115, 122, 82}, },
            {{46, 100, -38}, {101, 101, 278}, {102, 122, 82}, },
            {{46, 99, -91}, {100, 100, 279}, {101, 122, 82}, },
            {{46, 95, -33}, {97, 97, 280}, {98, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 115, -101}, {116, 116, 281}, {117, 122, 82}, },
            {{46, 109, -40}, {110, 110, 282}, {111, 122, 82}, },
            {{111, 111, 283}, },
            {{46, 122, -33}, },
            {{46, 104, -106}, {105, 105, 284}, {106, 122, 82}, },
            {{46, 122, -33}, },
            {{48, 57, 285}, {58, 58, 286}, },
            {{48, 57, 287}, },
            {{46, 122, -61}, },
            {{46, 100, -67}, {101, 101, 288}, {102, 122, 59}, },
            {{46, 114, -75}, {115, 115, 289}, {116, 122, 59}, },
            {{46, 114, -75}, {115, 115, 290}, {116, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 122, -61}, },
            {{46, 122, -61}, },
            {{46, 115, -64}, {116, 116, 291}, {117, 122, 59}, },
            {{46, 57, -60}, {65, 66, 59}, {67, 67, 292}, {68, 90, 59}, {95, 122, -18}, },
            {{46, 98, -66}, {99, 99, 293}, {100, 122, 59}, },
            {{46, 113, -39}, {114, 114, 294}, {115, 122, 82}, },
            {{46, 114, -48}, {115, 115, 295}, {116, 122, 82}, },
            {{46, 115, -101}, {116, 116, 296}, {117, 122, 82}, },
            {{32, 32, 297}, {46, 122, -33}, },
            {{46, 122, -33}, },
            {{46, 103, -49}, {104, 104, 298}, {105, 122, 82}, },
            {{32, 32, 299}, {46, 122, -33}, },
            {{46, 122, -33}, },
            {{46, 122, -33}, },
            {{32, 32, 300}, {46, 122, -33}, },
            {{46, 115, -101}, {116, 116, 301}, {117, 122, 82}, },
            {{46, 122, -33}, },
            {{46, 98, -46}, {99, 99, 302}, {100, 122, 82}, },
            {{102, 102, 303}, },
            {{46, 109, -40}, {110, 110, 304}, {111, 122, 82}, },
            {{48, 57, 305}, },
            {{48, 57, 306}, },
            {{45, 45, 307}, },
            {{46, 95, -61}, {97, 97, 308}, {98, 122, 59}, },
            {{46, 104, -69}, {105, 105, 309}, {106, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 114, -75}, {115, 115, 310}, {116, 122, 59}, },
            {{46, 110, -185}, {111, 111, 311}, {112, 122, 59}, },
            {{46, 100, -67}, {101, 101, 312}, {102, 122, 59}, },
            {{46, 115, -101}, {116, 116, 313}, {117, 122, 82}, },
            {{32, 32, 314}, {46, 122, -33}, },
            {{46, 122, -33}, },
            {{97, 97, 315}, },
            {{46, 122, -33}, },
            {{111, 111, 316}, },
            {{105, 105, 317}, },
            {{46, 104, -106}, {105, 105, 318}, {106, 122, 82}, },
            {{46, 100, -38}, {101, 101, 319}, {102, 122, 82}, },
            {},
            {{46, 100, -38}, {101, 101, 320}, {102, 122, 82}, },
            {{45, 45, 321}, {48, 57, 322}, },
            {{48, 57, 323}, },
            {{48, 57, 324}, },
            {{46, 113, -63}, {114, 114, 325}, {115, 122, 59}, },
            {{46, 114, -75}, {115, 115, 326}, {116, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 99, -81}, {100, 100, 327}, {101, 122, 59}, },
            {{46, 122, -61}, },
            {{46, 122, -33}, },
            {{97, 97, 328}, },
            {{114, 114, 329}, },
            {{102, 102, 330}, },
            {{115, 115, 331}, },
            {{46, 110, -35}, {111, 111, 332}, {112, 122, 82}, },
            {{46, 114, -48}, {115, 115, 333}, {116, 122, 82}, },
            {{46, 122, -33}, },
            {{48, 57, 334}, },
            {{48, 57, 322}, },
            {},
            {{48, 57, 335}, },
            {{46, 122, -61}, },
            {{46, 122, -61}, },
            {{46, 100, -67}, {101, 101, 336}, {102, 122, 59}, },
            {{114, 114, 337}, },
            {{101, 101, 338}, },
            {},
            {},
            {{46, 109, -40}, {110, 110, 339}, {111, 122, 82}, },
            {{46, 122, -33}, },
            {{48, 57, 340}, },
            {{32, 32, 55}, },
            {{46, 122, -61}, },
            {{101, 101, 341}, },
            {},
            {{32, 32, 342}, {46, 122, -33}, },
            {{45, 45, 343}, },
            {},
            {{105, 105, 344}, },
            {{48, 57, 345}, },
            {{115, 115, 346}, },
            {{48, 57, 347}, },
            {},
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {66, 70, 70, 70, 70, 44, 45, 58, 48, -1, -1, 66, 49, 51, 50, 52, 60, 60, 60, 60, 28, 60, 60, 27, 60, 60, 60, 60, 60, 53, 54, 67, 67, 67, 67, 67, 28, 67, 67, 67, 27, 67, 67, 67, 67, 67, 67, 67, 46, 56, 47, -1, 55, -1, -1, -1, 65, -1, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 30, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 67, 67, 67, 67, 1, 67, 67, 67, 67, 67, 67, 67, 67, 4, 67, 67, 67, 67, 67, 67, 2, 67, 67, 67, 67, 67, 67, 67, 67, 3, 67, 67, -1, -1, -1, -1, 71, 71, 66, -1, -1, 68, 60, 68, 68, 68, 68, 68, 68, 68, 63, 68, 68, 63, 68, 68, 63, 68, 31, 63, 68, 68, 63, 68, 67, 67, 67, 67, 6, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 7, 67, 67, 67, 67, 67, 67, 67, 67, 5, 67, 59, -1, 69, 71, 64, -1, -1, 68, 68, 68, 39, 68, 68, 68, 68, 43, 27, 68, 68, 68, 68, 68, 63, 68, 67, 67, 67, 67, 67, 67, 67, 67, 67, 18, 20, 27, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 59, -1, -1, 66, 62, 57, 68, 68, 40, 68, 68, 68, 68, 43, 68, 68, 68, 68, 63, 37, 67, 24, 67, 67, 67, 67, 67, 8, 67, 67, 67, 67, 67, 16, 67, 67, -1, 14, 67, 15, 59, -1, 60, 68, 68, 34, 41, 28, 38, 68, 68, 68, 67, 67, 67, 67, 28, 67, 67, 23, 17, 67, 67, 0, 67, -1, 67, 59, -1, -1, 68, 68, 34, 33, 68, 68, 67, 67, 29, -1, 13, -1, -1, 67, 67, 22, 67, 59, -1, -1, 68, 68, 33, 68, 42, 21, -1, -1, -1, -1, 67, 19, 25, -1, 59, 59, -1, 32, 35, 68, -1, -1, 26, 9, 67, 19, -1, 61, 36, -1, 12, 67, -1, 11, -1, -1, -1, -1, 10, 59, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
