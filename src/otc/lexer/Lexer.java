/* This file was generated by SableCC (http://www.sablecc.org/). */

package otc.lexer;

import java.io.*;
import otc.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTScript(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTBy(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTOf(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTTo(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTIn(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTUse(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTGroup(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPeriod(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPopulation(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDoctor(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTEvents(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTForeach(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTTable(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTWhere(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPrint(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTNative(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTLike(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTSequence(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTSequences(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTList(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTBarchart(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTSize(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTMember(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTCount(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTTimeline(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTIdType(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTSexType(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTBirthyearType(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDiagnosisType(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTPostalcodeType(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTYearsType(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTMonthsType(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDaysType(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDateType(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTEventType(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTSequenceType(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParen(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParen(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTGroupFile(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTIdentifier(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTScriptName(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTDocComment(text, line, pos); }
    Token new43(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEmptySpace(text, line, pos); }
    Token new44(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLineComment(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {40, 40, 5}, {41, 41, 6}, {44, 44, 7}, {47, 47, 8}, {65, 65, 9}, {66, 66, 10}, {67, 67, 9}, {68, 68, 11}, {69, 69, 12}, {70, 72, 9}, {73, 73, 13}, {74, 76, 9}, {77, 77, 14}, {78, 79, 9}, {80, 80, 15}, {81, 82, 9}, {83, 83, 16}, {84, 88, 9}, {89, 89, 17}, {90, 90, 9}, {97, 97, 18}, {98, 98, 19}, {99, 99, 20}, {100, 100, 21}, {101, 101, 22}, {102, 102, 23}, {103, 103, 24}, {104, 104, 18}, {105, 105, 25}, {106, 107, 18}, {108, 108, 26}, {109, 109, 27}, {110, 110, 28}, {111, 111, 29}, {112, 112, 30}, {113, 114, 18}, {115, 115, 31}, {116, 116, 32}, {117, 117, 33}, {118, 118, 18}, {119, 119, 34}, {120, 122, 18}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{42, 42, 35}, {47, 47, 36}, },
            {{46, 46, 37}, {48, 57, 38}, {65, 90, 39}, {95, 95, 40}, {97, 122, 39}, },
            {{46, 95, -11}, {97, 104, 39}, {105, 105, 41}, {106, 122, 39}, },
            {{46, 95, -11}, {97, 97, 42}, {98, 104, 39}, {105, 105, 43}, {106, 122, 39}, },
            {{46, 95, -11}, {97, 117, 39}, {118, 118, 44}, {119, 122, 39}, },
            {{46, 95, -11}, {97, 99, 39}, {100, 100, 45}, {101, 122, 39}, },
            {{46, 95, -11}, {97, 110, 39}, {111, 111, 46}, {112, 122, 39}, },
            {{46, 110, -16}, {111, 111, 47}, {112, 122, 39}, },
            {{46, 95, -11}, {97, 100, 39}, {101, 101, 48}, {102, 122, 39}, },
            {{46, 100, -18}, {101, 101, 49}, {102, 122, 39}, },
            {{46, 46, 37}, {48, 57, 50}, {65, 90, 51}, {95, 95, 52}, {97, 122, 51}, },
            {{46, 95, -20}, {97, 97, 53}, {98, 120, 51}, {121, 121, 54}, {122, 122, 51}, },
            {{46, 95, -20}, {97, 110, 51}, {111, 111, 55}, {112, 122, 51}, },
            {{46, 110, -22}, {111, 111, 56}, {112, 122, 51}, },
            {{46, 95, -20}, {97, 117, 51}, {118, 118, 57}, {119, 122, 51}, },
            {{46, 110, -22}, {111, 111, 58}, {112, 122, 51}, },
            {{46, 95, -20}, {97, 113, 51}, {114, 114, 59}, {115, 122, 51}, },
            {{46, 95, -20}, {97, 109, 51}, {110, 110, 60}, {111, 122, 51}, },
            {{46, 95, -20}, {97, 104, 51}, {105, 105, 61}, {106, 122, 51}, },
            {{46, 95, -20}, {97, 100, 51}, {101, 101, 62}, {102, 122, 51}, },
            {{46, 95, -20}, {97, 97, 63}, {98, 122, 51}, },
            {{46, 95, -20}, {97, 101, 51}, {102, 102, 64}, {103, 122, 51}, },
            {{46, 100, -29}, {101, 101, 65}, {102, 110, 51}, {111, 111, 66}, {112, 113, 51}, {114, 114, 67}, {115, 122, 51}, },
            {{46, 95, -20}, {97, 98, 51}, {99, 99, 68}, {100, 100, 51}, {101, 101, 69}, {102, 104, 51}, {105, 105, 70}, {106, 122, 51}, },
            {{46, 95, -20}, {97, 97, 71}, {98, 104, 51}, {105, 105, 72}, {106, 110, 51}, {111, 111, 73}, {112, 122, 51}, },
            {{46, 95, -20}, {97, 114, 51}, {115, 115, 74}, {116, 122, 51}, },
            {{46, 95, -20}, {97, 103, 51}, {104, 104, 75}, {105, 122, 51}, },
            {{0, 41, 76}, {42, 42, 77}, {43, 127, 76}, },
            {{0, 9, 78}, {10, 10, 79}, {11, 12, 78}, {13, 13, 80}, {14, 127, 78}, },
            {{103, 103, 81}, },
            {{46, 122, -11}, },
            {{46, 122, -11}, },
            {{46, 122, -11}, },
            {{46, 95, -11}, {97, 113, 39}, {114, 114, 82}, {115, 122, 39}, },
            {{46, 95, -11}, {97, 115, 39}, {116, 116, 83}, {117, 120, 39}, {121, 121, 84}, {122, 122, 39}, },
            {{46, 95, -11}, {97, 97, 85}, {98, 122, 39}, },
            {{46, 100, -18}, {101, 101, 86}, {102, 122, 39}, },
            {{46, 122, -11}, },
            {{46, 95, -11}, {97, 109, 39}, {110, 110, 87}, {111, 122, 39}, },
            {{46, 95, -11}, {97, 114, 39}, {115, 115, 88}, {116, 122, 39}, },
            {{46, 95, -11}, {97, 112, 39}, {113, 113, 89}, {114, 119, 39}, {120, 120, 90}, {121, 122, 39}, },
            {{46, 95, -11}, {97, 97, 91}, {98, 122, 39}, },
            {{46, 122, -20}, },
            {{46, 122, -20}, },
            {{46, 122, -20}, },
            {{46, 113, -26}, {114, 114, 92}, {115, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 95, -20}, {97, 116, 51}, {117, 117, 93}, {118, 122, 51}, },
            {{46, 98, -33}, {99, 99, 94}, {100, 122, 51}, },
            {{46, 100, -29}, {101, 101, 95}, {102, 122, 51}, },
            {{46, 113, -26}, {114, 114, 96}, {115, 122, 51}, },
            {{46, 110, -22}, {111, 111, 97}, {112, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 95, -20}, {97, 106, 51}, {107, 107, 98}, {108, 114, 51}, {115, 115, 99}, {116, 122, 51}, },
            {{46, 95, -20}, {97, 108, 51}, {109, 109, 100}, {110, 122, 51}, },
            {{46, 95, -20}, {97, 115, 51}, {116, 116, 101}, {117, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 113, -26}, {114, 114, 102}, {115, 122, 51}, },
            {{46, 95, -20}, {97, 111, 51}, {112, 112, 103}, {113, 122, 51}, },
            {{46, 104, -28}, {105, 105, 104}, {106, 122, 51}, },
            {{46, 113, -26}, {114, 114, 105}, {115, 122, 51}, },
            {{46, 95, -20}, {97, 112, 51}, {113, 113, 106}, {114, 122, 51}, },
            {{46, 95, -20}, {97, 121, 51}, {122, 122, 107}, },
            {{46, 95, -20}, {97, 97, 51}, {98, 98, 108}, {99, 122, 51}, },
            {{46, 108, -64}, {109, 109, 109}, {110, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 100, -29}, {101, 101, 110}, {102, 122, 51}, },
            {{46, 100, -29}, {101, 101, 111}, {102, 122, 51}, },
            {{0, 127, -37}, },
            {{0, 41, 112}, {42, 42, 77}, {43, 46, 112}, {47, 47, 113}, {48, 127, 112}, },
            {{0, 127, -38}, },
            {{13, 13, 114}, },
            {},
            {{114, 114, 115}, },
            {{46, 115, -44}, {116, 116, 116}, {117, 122, 39}, },
            {{46, 100, -18}, {101, 101, 117}, {102, 122, 39}, },
            {{46, 114, -49}, {115, 115, 118}, {116, 122, 39}, },
            {{46, 95, -11}, {97, 102, 39}, {103, 103, 119}, {104, 122, 39}, },
            {{46, 109, -48}, {110, 110, 120}, {111, 122, 39}, },
            {{46, 115, -44}, {116, 116, 121}, {117, 122, 39}, },
            {{46, 115, -44}, {116, 116, 122}, {117, 122, 39}, },
            {{46, 95, -11}, {97, 116, 39}, {117, 117, 123}, {118, 122, 39}, },
            {{46, 122, -11}, },
            {{46, 113, -43}, {114, 114, 124}, {115, 122, 39}, },
            {{46, 98, -33}, {99, 99, 125}, {100, 122, 51}, },
            {{46, 109, -27}, {110, 110, 126}, {111, 122, 51}, },
            {{46, 115, -65}, {116, 116, 127}, {117, 122, 51}, },
            {{46, 109, -27}, {110, 110, 128}, {111, 122, 51}, },
            {{46, 100, -29}, {101, 101, 129}, {102, 122, 51}, },
            {{46, 116, -57}, {117, 117, 130}, {118, 122, 51}, },
            {{46, 100, -29}, {101, 101, 131}, {102, 122, 51}, },
            {{46, 115, -65}, {116, 116, 132}, {117, 122, 51}, },
            {{46, 97, -73}, {98, 98, 133}, {99, 122, 51}, },
            {{46, 104, -28}, {105, 105, 134}, {106, 122, 51}, },
            {{46, 104, -28}, {105, 105, 135}, {106, 122, 51}, },
            {{46, 116, -57}, {117, 117, 136}, {118, 122, 51}, },
            {{46, 109, -27}, {110, 110, 137}, {111, 122, 51}, },
            {{46, 104, -28}, {105, 105, 138}, {106, 122, 51}, },
            {{46, 116, -57}, {117, 117, 139}, {118, 122, 51}, },
            {{46, 100, -29}, {101, 101, 140}, {102, 122, 51}, },
            {{46, 95, -20}, {97, 107, 51}, {108, 108, 141}, {109, 122, 51}, },
            {{46, 100, -29}, {101, 101, 142}, {102, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 113, -26}, {114, 114, 143}, {115, 122, 51}, },
            {{0, 41, 144}, {42, 42, 77}, {43, 127, 144}, },
            {},
            {},
            {{112, 112, 145}, },
            {{46, 95, -11}, {97, 103, 39}, {104, 104, 146}, {105, 122, 39}, },
            {{46, 114, -49}, {115, 115, 147}, {116, 122, 39}, },
            {{46, 122, -11}, },
            {{46, 109, -48}, {110, 110, 148}, {111, 122, 39}, },
            {{46, 115, -44}, {116, 116, 149}, {117, 122, 39}, },
            {{46, 103, -118}, {104, 104, 150}, {105, 122, 39}, },
            {{46, 95, -11}, {97, 97, 151}, {98, 122, 39}, },
            {{46, 100, -18}, {101, 101, 152}, {102, 122, 39}, },
            {{46, 114, -49}, {115, 115, 153}, {116, 122, 39}, },
            {{46, 103, -36}, {104, 104, 154}, {105, 122, 51}, },
            {{46, 115, -65}, {116, 116, 155}, {117, 122, 51}, },
            {{46, 110, -22}, {111, 111, 156}, {112, 122, 51}, },
            {{46, 115, -65}, {116, 116, 157}, {117, 122, 51}, },
            {{46, 95, -20}, {97, 97, 158}, {98, 122, 51}, },
            {{46, 111, -68}, {112, 112, 159}, {113, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 122, -20}, },
            {{46, 100, -29}, {101, 101, 160}, {102, 122, 51}, },
            {{46, 117, -24}, {118, 118, 161}, {119, 122, 51}, },
            {{46, 110, -22}, {111, 111, 162}, {112, 122, 51}, },
            {{46, 107, -110}, {108, 108, 163}, {109, 122, 51}, },
            {{46, 115, -65}, {116, 116, 164}, {117, 122, 51}, },
            {{46, 111, -68}, {112, 112, 165}, {113, 122, 51}, },
            {{46, 100, -29}, {101, 101, 166}, {102, 122, 51}, },
            {{32, 32, 167}, {46, 122, -20}, },
            {{46, 100, -29}, {101, 101, 168}, {102, 122, 51}, },
            {{46, 107, -110}, {108, 108, 169}, {109, 122, 51}, },
            {{46, 100, -29}, {101, 101, 170}, {102, 122, 51}, },
            {{0, 127, -114}, },
            {},
            {{46, 95, -11}, {97, 120, 39}, {121, 121, 171}, {122, 122, 39}, },
            {{46, 122, -11}, },
            {{46, 110, -16}, {111, 111, 172}, {112, 122, 39}, },
            {{46, 122, -11}, },
            {{46, 114, -49}, {115, 115, 173}, {116, 122, 39}, },
            {{46, 95, -11}, {97, 107, 39}, {108, 108, 174}, {109, 122, 39}, },
            {{46, 109, -48}, {110, 110, 175}, {111, 122, 39}, },
            {{46, 122, -11}, },
            {{46, 95, -20}, {97, 97, 176}, {98, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 113, -26}, {114, 114, 177}, {115, 122, 51}, },
            {{46, 114, -35}, {115, 115, 178}, {116, 122, 51}, },
            {{46, 98, -33}, {99, 99, 179}, {100, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 113, -26}, {114, 114, 180}, {115, 122, 51}, },
            {{46, 100, -29}, {101, 101, 181}, {102, 122, 51}, },
            {{46, 95, -20}, {97, 99, 51}, {100, 100, 182}, {101, 122, 51}, },
            {{46, 95, -20}, {97, 97, 183}, {98, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 115, -65}, {116, 116, 184}, {117, 122, 51}, },
            {{46, 109, -27}, {110, 110, 185}, {111, 122, 51}, },
            {{111, 111, 186}, },
            {{46, 122, -20}, },
            {{46, 104, -28}, {105, 105, 187}, {106, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 100, -18}, {101, 101, 188}, {102, 122, 39}, },
            {{46, 114, -49}, {115, 115, 189}, {116, 122, 39}, },
            {{46, 122, -11}, },
            {{46, 57, -11}, {65, 66, 39}, {67, 67, 190}, {68, 90, 39}, {95, 122, -11}, },
            {{46, 95, -11}, {97, 98, 39}, {99, 99, 191}, {100, 122, 39}, },
            {{46, 113, -26}, {114, 114, 192}, {115, 122, 51}, },
            {{46, 114, -35}, {115, 115, 193}, {116, 122, 51}, },
            {{32, 32, 194}, {46, 122, -20}, },
            {{46, 103, -36}, {104, 104, 195}, {105, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 122, -20}, },
            {{32, 32, 196}, {46, 122, -20}, },
            {{46, 115, -65}, {116, 116, 197}, {117, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 98, -33}, {99, 99, 198}, {100, 122, 51}, },
            {{102, 102, 199}, },
            {{46, 109, -27}, {110, 110, 200}, {111, 122, 51}, },
            {{46, 95, -11}, {97, 97, 201}, {98, 122, 39}, },
            {{46, 104, -12}, {105, 105, 202}, {106, 122, 39}, },
            {{46, 110, -16}, {111, 111, 203}, {112, 122, 39}, },
            {{46, 100, -18}, {101, 101, 204}, {102, 122, 39}, },
            {{46, 115, -65}, {116, 116, 205}, {117, 122, 51}, },
            {{32, 32, 206}, {46, 122, -20}, },
            {{97, 97, 207}, },
            {{46, 122, -20}, },
            {{105, 105, 208}, },
            {{46, 104, -28}, {105, 105, 209}, {106, 122, 51}, },
            {{46, 100, -29}, {101, 101, 210}, {102, 122, 51}, },
            {},
            {{46, 100, -29}, {101, 101, 211}, {102, 122, 51}, },
            {{46, 113, -43}, {114, 114, 212}, {115, 122, 39}, },
            {{46, 114, -49}, {115, 115, 213}, {116, 122, 39}, },
            {{46, 99, -15}, {100, 100, 214}, {101, 122, 39}, },
            {{46, 122, -11}, },
            {{46, 122, -20}, },
            {{97, 97, 215}, },
            {{114, 114, 216}, },
            {{115, 115, 217}, },
            {{46, 110, -22}, {111, 111, 218}, {112, 122, 51}, },
            {{46, 114, -35}, {115, 115, 219}, {116, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 122, -11}, },
            {{46, 122, -11}, },
            {{46, 100, -18}, {101, 101, 220}, {102, 122, 39}, },
            {{114, 114, 221}, },
            {{101, 101, 222}, },
            {},
            {{46, 109, -27}, {110, 110, 223}, {111, 122, 51}, },
            {{46, 122, -20}, },
            {{46, 122, -11}, },
            {{101, 101, 224}, },
            {},
            {{32, 32, 225}, {46, 122, -20}, },
            {},
            {{105, 105, 226}, },
            {{115, 115, 227}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 43, 43, 43, 43, 36, 37, 38, -1, 41, 41, 41, 41, 41, 41, 41, 41, 41, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, -1, -1, -1, 41, 41, 41, 41, 41, 41, 41, 25, 41, 41, 41, 41, 40, 40, 40, 40, 1, 40, 40, 40, 40, 40, 4, 40, 40, 40, 2, 40, 40, 40, 40, 40, 40, 40, 40, 3, 40, 40, -1, -1, -1, 44, 44, -1, 41, 41, 41, 41, 41, 41, 41, 41, 26, 41, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 5, 40, -1, 42, 44, -1, 41, 41, 32, 41, 41, 41, 41, 41, 41, 40, 40, 40, 40, 40, 40, 16, 19, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, -1, 39, 41, 33, 41, 34, 41, 41, 41, 30, 40, 23, 40, 40, 40, 6, 40, 40, 40, 40, 14, 40, 40, -1, 12, 40, 13, 41, 41, 31, 41, 41, 40, 40, 40, 40, 22, 15, 40, 40, 0, 40, -1, 40, 41, 41, 41, 41, 40, 40, -1, 11, -1, 40, 40, 21, 40, 41, 41, 41, 35, 20, -1, -1, -1, 40, 17, 24, 27, 28, 41, -1, -1, 7, 40, 18, 29, -1, 10, 40, 9, -1, -1, 8, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
